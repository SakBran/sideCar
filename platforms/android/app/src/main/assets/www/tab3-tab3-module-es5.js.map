{"version":3,"sources":["webpack:///src/app/tab3/admin/item-confirm-detail/item-confirm-detail.component.html","webpack:///src/app/tab3/admin/item-confirm/item-confirm.component.html","webpack:///src/app/tab3/admin/location-create/location-create.component.html","webpack:///src/app/tab3/admin/location-list/location-list.component.html","webpack:///src/app/tab3/admin/main-page/main-page.component.html","webpack:///src/app/tab3/admin/opening-create/opening-create.component.html","webpack:///src/app/tab3/admin/opening-list/opening-list.component.html","webpack:///src/app/tab3/admin/resturant-create/resturant-create.component.html","webpack:///src/app/tab3/admin/resturant-list/resturant-list.component.html","webpack:///src/app/tab3/admin/rider-earning-create/rider-earning-create.component.html","webpack:///src/app/tab3/admin/rider-earning-list/rider-earning-list.component.html","webpack:///src/app/tab3/admin/user-create/user-create.component.html","webpack:///src/app/tab3/admin/user-list/user-list.component.html","webpack:///src/app/tab3/resturant/food-create/food-create.component.html","webpack:///src/app/tab3/resturant/food-list/food-list.component.html","webpack:///src/app/tab3/resturant/res-main-page/res-main-page.component.html","webpack:///src/app/tab3/tab3.page.html","webpack:///src/app/Services/openingBalance/opening-balance.service.ts","webpack:///src/app/Services/riderEarning/rider-earning.service.ts","webpack:///src/app/tab3/admin/item-confirm-detail/item-confirm-detail.component.scss","webpack:///src/app/tab3/admin/item-confirm-detail/item-confirm-detail.component.ts","webpack:///src/app/tab3/admin/item-confirm/item-confirm.component.scss","webpack:///src/app/tab3/admin/item-confirm/item-confirm.component.ts","webpack:///src/app/tab3/admin/location-create/location-create.component.scss","webpack:///src/app/tab3/admin/location-create/location-create.component.ts","webpack:///src/app/tab3/admin/location-list/location-list.component.scss","webpack:///src/app/tab3/admin/location-list/location-list.component.ts","webpack:///src/app/tab3/admin/main-page/main-page.component.scss","webpack:///src/app/tab3/admin/main-page/main-page.component.ts","webpack:///src/app/tab3/admin/opening-create/opening-create.component.scss","webpack:///src/app/tab3/admin/opening-create/opening-create.component.ts","webpack:///src/app/tab3/admin/opening-list/opening-list.component.scss","webpack:///src/app/tab3/admin/opening-list/opening-list.component.ts","webpack:///src/app/tab3/admin/resturant-create/resturant-create.component.scss","webpack:///src/app/tab3/admin/resturant-create/resturant-create.component.ts","webpack:///src/app/tab3/admin/resturant-list/resturant-list.component.scss","webpack:///src/app/tab3/admin/resturant-list/resturant-list.component.ts","webpack:///src/app/tab3/admin/rider-earning-create/rider-earning-create.component.scss","webpack:///src/app/tab3/admin/rider-earning-create/rider-earning-create.component.ts","webpack:///src/app/tab3/admin/rider-earning-list/rider-earning-list.component.scss","webpack:///src/app/tab3/admin/rider-earning-list/rider-earning-list.component.ts","webpack:///src/app/tab3/admin/user-create/user-create.component.scss","webpack:///src/app/tab3/admin/user-create/user-create.component.ts","webpack:///src/app/tab3/admin/user-list/user-list.component.scss","webpack:///src/app/tab3/admin/user-list/user-list.component.ts","webpack:///src/app/tab3/resturant/food-create/food-create.component.scss","webpack:///src/app/tab3/resturant/food-create/food-create.component.ts","webpack:///src/app/tab3/resturant/food-list/food-list.component.scss","webpack:///src/app/tab3/resturant/food-list/food-list.component.ts","webpack:///src/app/tab3/resturant/res-main-page/res-main-page.component.scss","webpack:///src/app/tab3/resturant/res-main-page/res-main-page.component.ts","webpack:///src/app/tab3/tab3-routing.module.ts","webpack:///src/app/tab3/tab3.module.ts","webpack:///src/app/tab3/tab3.page.scss","webpack:///src/app/tab3/tab3.page.ts"],"names":["OpeningBalanceService","http","appSetting","url","apiAddress","date_url","httpOptions","headers","get","username","password","console","log","id","searchUrl","date","tempDate","toString","substring","data","post","subscribe","res","showSuccess","err","put","showError","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","DONE","responseText","open","send","providedIn","RiderEarningService","ItemConfirmDetailComponent","selector","template","ItemConfirmComponent","location","FoodService","route","dataLoading","back","getPending","x","showLoading","foodDataList","loadingClose","putConfirm","event","target","complete","undefined","navigateByUrl","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","LocationCreateComponent","LocationService","Router","snapshot","paramMap","locationData","TownShip","deliveryCharges","riderEarning","editLoad","getSingle","formValidation","showInvalid","LocationListComponent","locationDataList","splice","MainPageComponent","OpeningCreateComponent","riderSelectService","resData","openingAmount","openingAmount_date","Date","operatorID","sessionUserID","riderID","riderList","riderFilter","temp1","temp2","forEach","usertype","push","OpeningListComponent","resDataList","searchDate","e","getDate","name","temp","ResturantCreateComponent","ResturantModelService","credit","debit","phone","latitude","longitude","shopname","resturantType","ResturantListComponent","RiderEarningCreateComponent","riderEarningData","RiderEarningListComponent","riderEarningService","DataList","UserCreateComponent","UserTypeService","UserModelService","userTypeData","userData","length","i","usertypeName","UserListComponent","userDataList","FoodCreateComponent","foodData","itemName","itemNameTemp","resturant_id","resturantID","price","priceTemp","status","FoodListComponent","ResMainPageComponent","routes","path","component","Tab3PageRoutingModule","imports","forChild","exports","Tab3PageModule","declarations","Tab3Page"],"mappings":"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","file":"tab3-tab3-module-es5.js","sourcesContent":["export default \"<p>\\r\\n  item-confirm-detail works!\\r\\n</p>\\r\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\"> </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n         \\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-card *ngFor=\\\"let item of this.appSetting.foodDataList\\\">\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"/../assets/food.svg\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"fast-food-outline\\\"></ion-icon>\\r\\n            <ng-container\\r\\n              *ngIf=\\\"\\r\\n                this.item.itemNameTemp !== '' && this.item.status !== 'delete'\\r\\n              \\\"\\r\\n              >{{ item.itemNameTemp\\r\\n              }}<ion-icon name=\\\"arrow-redo-outline\\\"></ion-icon\\r\\n            ></ng-container>\\r\\n            <ng-container> {{ item.itemName }}</ng-container>\\r\\n          </p>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"card-outline\\\"></ion-icon> Price\\r\\n            <ng-container\\r\\n              *ngIf=\\\"this.item.priceTemp !== 0 && this.item.status !== 'delete'\\\"\\r\\n              >{{ item.priceTemp\\r\\n              }}<ion-icon name=\\\"arrow-redo-outline\\\"></ion-icon\\r\\n            ></ng-container>\\r\\n\\r\\n            <ng-container> {{ item.price }}</ng-container>\\r\\n          </p>\\r\\n\\r\\n          <p *ngIf=\\\"this.item.status === 'delete'\\\">\\r\\n            <ion-text color=\\\"danger\\\">\\r\\n              <h3>Delete this item</h3>\\r\\n            </ion-text>\\r\\n          </p>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            \\r\\n            <ion-col \\r\\n              ><ion-button\\r\\n                (click)=\\\"reject(item.id)\\\"\\r\\n                expand=\\\"block\\\"\\r\\n                fill=\\\"outline\\\"\\r\\n                color=\\\"secondary\\\"\\r\\n              >\\r\\n                Reject</ion-button\\r\\n            ></ion-col>\\r\\n            <ion-col \\r\\n              ><ion-button\\r\\n                (click)=\\\"acept(item.id)\\\"\\r\\n                expand=\\\"block\\\"\\r\\n                fill=\\\"outline\\\"\\r\\n                color=\\\"secondary\\\"\\r\\n              >\\r\\n               Acept </ion-button\\r\\n            ></ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle color=\\\"primary\\\">Location & Price Registration Form</ion-card-subtitle>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Shop's General Info</ion-card-subtitle>\\r\\n\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"business-outline\\\"></ion-icon> Township<ion-text\\r\\n                *ngIf=\\\"this.locationData.TownShip===''||this.locationData.TownShip===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"locationData.TownShip\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"card-outline\\\"></ion-icon> Delivery Charges<ion-text\\r\\n                *ngIf=\\\"this.locationData.deliveryCharges===0\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"locationData.deliveryCharges\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n         <!-------- <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"bicycle-outline\\\"></ion-icon> Rider Earnings<ion-text\\r\\n                *ngIf=\\\"this.locationData.riderEarning===0\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"locationData.riderEarning\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>-------->\\r\\n\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n\\r\\n      <ion-grid fixed>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Cancel\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button *ngIf=\\\"this.id===0\\\" (click)=\\\"create()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Save\\r\\n            </ion-button>\\r\\n            <ion-button *ngIf=\\\"this.id!==0\\\" (click)=\\\"update()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Update\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-chip routerLink=\\\"/tabs/tab3/locationCreate\\\">\\r\\n            <ion-icon name=\\\"person-add-outline\\\"></ion-icon>\\r\\n            <ion-label>New</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-card *ngFor=\\\"let item of locationDataList\\\">\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src='/../assets/shop.svg'>\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"business-outline\\\"></ion-icon> {{item.TownShip}}\\r\\n          </p>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"card-outline\\\"></ion-icon> Delivery Charges {{item.deliveryCharges}}\\r\\n          </p>\\r\\n        <!-----  <p>\\r\\n            <ion-icon name=\\\"bicycle-outline\\\"></ion-icon> Rider Earnings {{item.riderEarning}}\\r\\n          </p>---->\\r\\n        </ion-label>\\r\\n\\r\\n        <ion-button (click)=\\\"onEdit(item.id)\\\" color=\\\"secondary\\\">\\r\\n          <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n        <ion-button (click)=\\\"onDelete(item.id)\\\" color=\\\"danger\\\">\\r\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\";","export default \"<ion-grid>\\r\\n\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <ion-card routerLink=\\\"/tabs/tab1/deliveryPending\\\" class=\\\"report\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Delivery Pending</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src='/../assets/history.svg' />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <ion-card class=\\\"report\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Delivery Finished</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src='/../assets/goal.svg' />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <ion-card class=\\\"report\\\" routerLink=\\\"userList\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>User</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src='/../assets/person.svg' />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <ion-card class=\\\"report\\\" routerLink=\\\"resturantList\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Resturant</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src='/../assets/food.svg' />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n\\r\\n\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <ion-card class=\\\"report\\\" routerLink=\\\"itemConfirm\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Item Confirm</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src='/../assets/food.svg' />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <ion-card class=\\\"report\\\" routerLink=\\\"locationList\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Location & Price</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src='/../assets/location.svg' />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <ion-card class=\\\"report\\\" routerLink=\\\"riderEarning\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Rider Earning</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src='/../assets/price.svg' />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <ion-card class=\\\"report\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Report</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src='/../assets/report.svg' />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n\\r\\n\\r\\n<ion-row>\\r\\n  <ion-col>\\r\\n    <ion-card class=\\\"report\\\" routerLink=\\\"openingBalance\\\" button>\\r\\n      <ion-card-header>\\r\\n        <ion-card-subtitle>Opening Balance</ion-card-subtitle>\\r\\n      </ion-card-header>\\r\\n      <ion-card-content>\\r\\n        <img src='/../assets/calculator.svg' />\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n  </ion-col>\\r\\n  <ion-col>\\r\\n    \\r\\n  </ion-col>\\r\\n</ion-row>\\r\\n</ion-grid>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle color=\\\"primary\\\">Opening Balance Registration Form</ion-card-subtitle>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n\\r\\n      \\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"person-outline\\\"></ion-icon> Rider<ion-text\\r\\n                *ngIf=\\\"this.resData.riderID===0||this.resData.riderID===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-select  [(ngModel)]=\\\"this.resData.riderID\\\">\\r\\n              <ion-select-option *ngFor=\\\"let item of this.riderList\\\" [value]='item.id'>{{item.username}} | {{item.phone}}</ion-select-option>\\r\\n            </ion-select>\\r\\n          </ion-item>\\r\\n        \\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"business-outline\\\"></ion-icon> Opening Balance Amount<ion-text\\r\\n                *ngIf=\\\"this.resData.openingAmount===0\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"resData.openingAmount\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"business-outline\\\"></ion-icon> Date<ion-text\\r\\n                *ngIf=\\\"this.resData.openingAmount_date===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"resData.openingAmount_date\\\" type=\\\"date\\\"></ion-input>\\r\\n          </ion-item>\\r\\n       \\r\\n      \\r\\n   \\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n      <ion-grid fixed>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Cancel\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button *ngIf=\\\"this.id===0\\\" (click)=\\\"create()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Save\\r\\n            </ion-button>\\r\\n            <ion-button *ngIf=\\\"this.id!==0\\\" (click)=\\\"update()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Update\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-chip routerLink=\\\"/tabs/tab3/openingBalanceCreate\\\">\\r\\n            <ion-icon name=\\\"person-add-outline\\\"></ion-icon>\\r\\n            <ion-label>New</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-card *ngFor=\\\"let item of resDataList\\\">\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src='/../assets/shop.svg'>\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"business-outline\\\"></ion-icon> Rider :{{this.riderName(item.riderID)}}\\r\\n          </p>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"call-outline\\\"></ion-icon> Amount :{{item.openingAmount}}\\r\\n          </p>\\r\\n        </ion-label>\\r\\n\\r\\n        <ion-button (click)=\\\"onEdit(item.id)\\\" color=\\\"secondary\\\">\\r\\n          <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n        <ion-button (click)=\\\"onDelete(item.id)\\\" color=\\\"danger\\\">\\r\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<ion-toolbar color=\\\"light\\\">\\r\\n  <ion-item>\\r\\n    <ion-label>Report Date</ion-label>\\r\\n    <ion-datetime (ngModelChange)=\\\"dateChange($event)\\\" [(ngModel)]=\\\"searchDate\\\"displayFormat=\\\"DD-MMMM-YYYY\\\" ></ion-datetime>\\r\\n  </ion-item>\\r\\n</ion-toolbar>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle color=\\\"primary\\\">Resturant Registration Form</ion-card-subtitle>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Shop's General Info</ion-card-subtitle>\\r\\n\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"person-outline\\\"></ion-icon> Shop's username<ion-text\\r\\n                *ngIf=\\\"this.resData.username===''||this.resData.username===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"resData.username\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"business-outline\\\"></ion-icon> Shop's name<ion-text\\r\\n                *ngIf=\\\"this.resData.shopname===''||this.resData.shopname===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"resData.shopname\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"lock-open-outline\\\"></ion-icon> Password<ion-text\\r\\n                *ngIf=\\\"this.resData.password===''||this.resData.password===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"resData.password\\\" type=\\\"password\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"call-outline\\\"></ion-icon> Phone<ion-text\\r\\n                *ngIf=\\\"this.resData.phone===''||this.resData.phone===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"resData.phone\\\" type=\\\"tel\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"call-outline\\\"></ion-icon> Select Type<ion-text\\r\\n                *ngIf=\\\"this.resData.resturantType===''||this.resData.resturantType===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n   \\r\\n              <ion-select  [(ngModel)]=\\\"this.resData.resturantType\\\">\\r\\n                <ion-select-option [value]='this.credit'>Credit</ion-select-option>\\r\\n                <ion-select-option [value]='this.debit'>Debit</ion-select-option>\\r\\n              </ion-select>\\r\\n           \\r\\n          </ion-item>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Shop's Location</ion-card-subtitle>\\r\\n\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"location-outline\\\"></ion-icon> Longitude\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"resData.longitude\\\" type=\\\"number\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"location-outline\\\"></ion-icon> Latitude\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"resData.latitude\\\" type=\\\"number\\\"></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n\\r\\n      <ion-grid fixed>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Cancel\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button *ngIf=\\\"this.id===0\\\" (click)=\\\"create()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Save\\r\\n            </ion-button>\\r\\n            <ion-button *ngIf=\\\"this.id!==0\\\" (click)=\\\"update()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Update\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-chip routerLink=\\\"/tabs/tab3/resturantCreate\\\">\\r\\n            <ion-icon name=\\\"person-add-outline\\\"></ion-icon>\\r\\n            <ion-label>New</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-card *ngFor=\\\"let item of resDataList\\\">\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src='/../assets/shop.svg'>\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"business-outline\\\"></ion-icon> {{item.shopname}}\\r\\n          </p>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"call-outline\\\"></ion-icon> Ph {{item.phone}}\\r\\n          </p>\\r\\n        </ion-label>\\r\\n\\r\\n        <ion-button (click)=\\\"onEdit(item.id)\\\" color=\\\"secondary\\\">\\r\\n          <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n        <ion-button (click)=\\\"onDelete(item.id)\\\" color=\\\"danger\\\">\\r\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle color=\\\"primary\\\">Location & Price Registration Form</ion-card-subtitle>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Shop's General Info</ion-card-subtitle>\\r\\n\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n\\r\\n         \\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"card-outline\\\"></ion-icon> Delivery Charges<ion-text\\r\\n                *ngIf=\\\"this.riderEarningData.deliveryCharges===0\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"riderEarningData.deliveryCharges\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"card-outline\\\"></ion-icon> Rider Earnging<ion-text\\r\\n                *ngIf=\\\"this.riderEarningData.riderEarning===0\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"riderEarningData.riderEarning\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n         \\r\\n         <!-------- <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"bicycle-outline\\\"></ion-icon> Rider Earnings<ion-text\\r\\n                *ngIf=\\\"this.locationData.riderEarning===0\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"locationData.riderEarning\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>-------->\\r\\n\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n\\r\\n      <ion-grid fixed>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Cancel\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button *ngIf=\\\"this.id===0\\\" (click)=\\\"create()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Save\\r\\n            </ion-button>\\r\\n            <ion-button *ngIf=\\\"this.id!==0\\\" (click)=\\\"update()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Update\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-chip routerLink=\\\"/tabs/tab3/riderEarningCreate\\\">\\r\\n            <ion-icon name=\\\"person-add-outline\\\"></ion-icon>\\r\\n            <ion-label>New</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-card *ngFor=\\\"let item of DataList\\\">\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src='/../assets/shop.svg'>\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"business-outline\\\"></ion-icon> Rider Earnging {{item.riderEarning}}\\r\\n          </p>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"card-outline\\\"></ion-icon> Delivery Charges {{item.deliveryCharges}}\\r\\n          </p>\\r\\n        <!-----  <p>\\r\\n            <ion-icon name=\\\"bicycle-outline\\\"></ion-icon> Rider Earnings {{item.riderEarning}}\\r\\n          </p>---->\\r\\n        </ion-label>\\r\\n\\r\\n        <ion-button (click)=\\\"onEdit(item.id)\\\" color=\\\"secondary\\\">\\r\\n          <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n        <ion-button (click)=\\\"onDelete(item.id)\\\" color=\\\"danger\\\">\\r\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle color=\\\"primary\\\">User Registration Form</ion-card-subtitle>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>User's General Info</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"person-outline\\\"></ion-icon>Username\\r\\n              <ion-text *ngIf=\\\"this.userData.username===''||this.userData.username===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"userData.username\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"lock-open-outline\\\"></ion-icon>Password\\r\\n              <ion-text *ngIf=\\\"this.userData.password===''||this.userData.password===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"userData.password\\\" type=\\\"password\\\"></ion-input>\\r\\n          </ion-item>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"call-outline\\\"></ion-icon> Please enter phone\\r\\n              <ion-text *ngIf=\\\"this.userData.phone===''||this.userData.phone===null\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"this.userData.phone\\\" type=\\\"tel\\\"></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Security Info</ion-card-subtitle>\\r\\n\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"shield-checkmark-outline\\\"></ion-icon> Select User type\\r\\n              <ion-text *ngIf=\\\"this.userData.usertype===0\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-select [(ngModel)]=\\\"userData.usertype\\\" placeholder=\\\"Select one\\\">\\r\\n              <ng-container *ngFor=\\\"let item of this.userTypeData;let i=index;\\\">\\r\\n                <ion-select-option   [value]=\\\"item.id\\\">\\r\\n                  {{i+1}}.{{item.usertypeName}}</ion-select-option>\\r\\n              </ng-container>\\r\\n              \\r\\n             \\r\\n            </ion-select>\\r\\n\\r\\n          </ion-item>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n\\r\\n      <ion-grid fixed>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Cancel\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button *ngIf=\\\"this.id===0\\\" (click)=\\\"create()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Save\\r\\n            </ion-button>\\r\\n            <ion-button *ngIf=\\\"this.id!==0\\\" (click)=\\\"update()\\\" expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Update\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n          \\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-chip routerLink=\\\"/tabs/tab3/userCreate\\\">\\r\\n            <ion-icon name=\\\"person-add-outline\\\"></ion-icon>\\r\\n            <ion-label>New</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n    <ion-card *ngFor=\\\"let item of userDataList\\\">\\r\\n     \\r\\n      <ion-card-content>\\r\\n        <ion-item> \\r\\n          <ion-avatar slot=\\\"start\\\">\\r\\n            <img src='/../assets/person.svg'>\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <p><ion-icon name=\\\"person-outline\\\"></ion-icon>{{item.username}}</p>\\r\\n            <p><ion-icon name=\\\"call-outline\\\"></ion-icon> Ph {{item.phone}}</p>\\r\\n          </ion-label>\\r\\n          <ion-button (click)=\\\"onEdit(item.id)\\\" color=\\\"secondary\\\">\\r\\n            <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n\\r\\n          <ion-button (click)=\\\"onDelete(item.id)\\\" color=\\\"danger\\\">\\r\\n            <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-item>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n</ion-content>\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\"> </ion-col>\\r\\n        <ion-col size=\\\"3\\\"> </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle color=\\\"primary\\\"\\r\\n        >Foods & Drink Registration Form</ion-card-subtitle\\r\\n      >\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Foods & Drinks General Info</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"fast-food-outline\\\"></ion-icon> Food/Drink's\\r\\n              Name<ion-text\\r\\n                *ngIf=\\\"\\r\\n                  this.foodData.itemName === '' ||\\r\\n                  this.foodData.itemName === null\\r\\n                \\\"\\r\\n                color=\\\"danger\\\"\\r\\n              >\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"foodData.itemName\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\" color=\\\"secondary\\\">\\r\\n              <ion-icon name=\\\"cash-outline\\\"></ion-icon> Food/Drink's\\r\\n              Price<ion-text *ngIf=\\\"this.foodData.price === 0\\\" color=\\\"danger\\\">\\r\\n                *\\r\\n              </ion-text>\\r\\n            </ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"foodData.price\\\" type=\\\"text\\\"></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n\\r\\n      <ion-grid fixed>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button expand=\\\"block\\\" color=\\\"secondary\\\" shape=\\\"round\\\">\\r\\n              Cancel\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button\\r\\n              *ngIf=\\\"this.id === 0\\\"\\r\\n              (click)=\\\"create()\\\"\\r\\n              expand=\\\"block\\\"\\r\\n              color=\\\"secondary\\\"\\r\\n              shape=\\\"round\\\"\\r\\n            >\\r\\n              Save\\r\\n            </ion-button>\\r\\n            <ion-button\\r\\n              *ngIf=\\\"this.id !== 0\\\"\\r\\n              (click)=\\\"update()\\\"\\r\\n              expand=\\\"block\\\"\\r\\n              color=\\\"secondary\\\"\\r\\n              shape=\\\"round\\\"\\r\\n            >\\r\\n              Update\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip (click)=\\\"back()\\\">\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\"> </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-chip routerLink=\\\"/tabs/tab3/foodCreate\\\">\\r\\n            <ion-icon name=\\\"person-add-outline\\\"></ion-icon>\\r\\n            <ion-label>New</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-card *ngFor=\\\"let item of this.appSetting.foodDataList\\\">\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"/../assets/food.svg\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"fast-food-outline\\\"></ion-icon> {{ item.itemName }}\\r\\n          </p>\\r\\n          <p>\\r\\n            <ion-icon name=\\\"card-outline\\\"></ion-icon> Price {{ item.price }}\\r\\n          </p>\\r\\n        </ion-label>\\r\\n\\r\\n        <ion-button\\r\\n          *ngIf=\\\"this.item.status === 'active'\\\"\\r\\n          (click)=\\\"onEdit(item.id)\\\"\\r\\n          color=\\\"secondary\\\"\\r\\n        >\\r\\n          <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n        <ion-button\\r\\n          *ngIf=\\\"this.item.status === 'active'\\\"\\r\\n          (click)=\\\"onDelete(item.id)\\\"\\r\\n          color=\\\"danger\\\"\\r\\n        >\\r\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n\\r\\n        <ion-button *ngIf=\\\"this.item.status !== 'active'\\\" color=\\\"success\\\">\\r\\n          <ion-icon name=\\\"shield-checkmark-outline\\\"></ion-icon> Processing\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <ion-card routerLink=\\\"foodList\\\" class=\\\"report\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Food & Drinks</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src=\\\"/../assets/food.svg\\\" />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      <ion-card class=\\\"report\\\" routerLink=\\\"resturantList\\\" button>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>Report</ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <img src=\\\"/../assets/graphic.svg\\\" />\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n \\r\\n</ion-grid>\\r\\n\";","export default \"<ion-content>\\r\\n  <app-main-page *ngIf=\\\"this.appSetting.loginType==='admin'\\\"></app-main-page>\\r\\n  <app-res-main-page *ngIf=\\\"this.appSetting.loginType==='resturant'\\\"></app-res-main-page>\\r\\n</ion-content>\";","import { appSetting } from './../../app-setting';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { OpeningBalanceModel } from 'src/app/Models/openingBalanceModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OpeningBalanceService {\r\n  private url = `${this.appSetting.apiAddress}/api/OpeningBalanceModels`;\r\n  private date_url = `${this.appSetting.apiAddress}/api/OpeningBalanceModels/today`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient,private appSetting:appSetting) { }\r\n\r\n  get(): Observable<OpeningBalanceModel[]> {\r\n    return this.http.get<OpeningBalanceModel[]>(this.url);\r\n  }\r\n\r\n  getLogin(username:string,password:string): Observable<OpeningBalanceModel>{\r\n    console.log(this.url+`/login?user=${username}&password=${password}`);\r\n    return this.http.get<OpeningBalanceModel>(this.url+`/login?user=${username}&password=${password}`);\r\n  }\r\n  getAvailableRider(): Observable<OpeningBalanceModel[]> {\r\n    return this.http.get<OpeningBalanceModel[]>(this.url+`/availableRider`);\r\n  }\r\n  \r\n  getDeliveringRider(): Observable<OpeningBalanceModel[]> {\r\n    return this.http.get<OpeningBalanceModel[]>(this.url+`/deliveringRider`);\r\n  }\r\n  \r\n  getSingle(id: number): Observable<OpeningBalanceModel> {\r\n    const searchUrl = `${this.url}/${id}`;\r\n    return this.http.get<OpeningBalanceModel>(searchUrl);\r\n  }\r\n\r\n  getDate(date: Date): Observable<OpeningBalanceModel[]> {\r\n    const tempDate=date.toString().substring(0,10);\r\n    const searchUrl = `${this.date_url}/?date=${tempDate}`;\r\n    return this.http.get<OpeningBalanceModel[]>(searchUrl);\r\n  }\r\n\r\n  post(data: OpeningBalanceModel): void {\r\n    this.http.post(this.url, data, this.httpOptions).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  put(data: OpeningBalanceModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number): void {\r\n    const data = null;\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n\r\n    xhr.addEventListener('readystatechange', function() {\r\n      if (this.readyState === this.DONE) {\r\n        console.log(this.responseText);\r\n      }\r\n    });\r\n\r\n    xhr.open('DELETE', this.url + '/' + id);\r\n\r\n    xhr.send(data);\r\n  }\r\n}\r\n","import { riderEarningModel } from './../../Models/riderEarningModel';\r\nimport { appSetting } from './../../app-setting';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RiderEarningService {\r\n  private url = `${this.appSetting.apiAddress}/api/riderEarningModels`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient,private appSetting:appSetting) { }\r\n\r\n  get(): Observable<riderEarningModel[]> {\r\n    return this.http.get<riderEarningModel[]>(this.url);\r\n  }\r\n  getSingle(id: number): Observable<riderEarningModel> {\r\n    const searchUrl = `${this.url}/${id}`;\r\n    return this.http.get<riderEarningModel>(searchUrl);\r\n  }\r\n  post(data: riderEarningModel): void {\r\n    this.http.post(this.url, data, this.httpOptions).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  put(data: riderEarningModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number): void {\r\n    const data = null;\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n\r\n    xhr.addEventListener('readystatechange', function() {\r\n      if (this.readyState === this.DONE) {\r\n        console.log(this.responseText);\r\n      }\r\n    });\r\n\r\n    xhr.open('DELETE', this.url + '/' + id);\r\n\r\n    xhr.send(data);\r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vaXRlbS1jb25maXJtLWRldGFpbC9pdGVtLWNvbmZpcm0tZGV0YWlsLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-item-confirm-detail',\r\n  templateUrl: './item-confirm-detail.component.html',\r\n  styleUrls: ['./item-confirm-detail.component.scss'],\r\n})\r\nexport class ItemConfirmDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vaXRlbS1jb25maXJtL2l0ZW0tY29uZmlybS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Router } from \"@angular/router\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Location } from \"@angular/common\";\r\nimport { FoodService } from \"src/app/Services/food/food.service\";\r\nimport { foodModel } from \"src/app/Models/foodModel\";\r\n\r\n@Component({\r\n  selector: \"app-item-confirm\",\r\n  templateUrl: \"./item-confirm.component.html\",\r\n  styleUrls: [\"./item-confirm.component.scss\"],\r\n})\r\nexport class ItemConfirmComponent implements OnInit {\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    public FoodService: FoodService,\r\n    private route: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.dataLoading();\r\n  }\r\n\r\n  back() {\r\n    this.location.back();\r\n  }\r\n  dataLoading() {\r\n    this.FoodService.getPending().subscribe(\r\n      (x) => {\r\n        this.appSetting.showLoading();\r\n        this.appSetting.foodDataList = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n\r\n      () => {\r\n        this.appSetting.loadingClose();\r\n      }\r\n    );\r\n  }\r\n\r\n  acept(id) {\r\n    this.FoodService.putConfirm(id, \"true\");\r\n    this.FoodService.getPending().subscribe(\r\n      (x) => {\r\n        this.appSetting.foodDataList = x;\r\n      },\r\n      (err) => {\r\n        this.appSetting.showError(err);\r\n      },\r\n\r\n      () => {}\r\n    );\r\n  }\r\n  reject(id) {\r\n    this.FoodService.putConfirm(id, \"false\");\r\n    this.FoodService.getPending().subscribe(\r\n      (x) => {\r\n        this.appSetting.foodDataList = x;\r\n      },\r\n      (err) => {\r\n        this.appSetting.showError(err);\r\n      },\r\n\r\n      () => {}\r\n    );\r\n  }\r\n  refresh(event) {\r\n    this.FoodService.getPending().subscribe(\r\n      (x) => {\r\n        this.appSetting.foodDataList = x;\r\n      },\r\n      (err) => {\r\n        this.appSetting.showError(err);\r\n        event.target.complete();\r\n      },\r\n\r\n      () => {\r\n        if (event !== undefined || event !== null) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEdit(id) {\r\n    this.route.navigateByUrl(\"tabs/tab3/foodEdit/\" + id);\r\n  }\r\n\r\n  onDelete(id) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.FoodService.delete(id);\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vbG9jYXRpb24tY3JlYXRlL2xvY2F0aW9uLWNyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { locationModel } from \"src/app/Models/locationModel\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { LocationService } from \"src/app/Services/location/location.service\";\r\nimport { Location } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: \"app-location-create\",\r\n  templateUrl: \"./location-create.component.html\",\r\n  styleUrls: [\"./location-create.component.scss\"],\r\n})\r\nexport class LocationCreateComponent implements OnInit {\r\n  id = +this.Router.snapshot.paramMap.get(\"id\");\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    private LocationService: LocationService,\r\n    private route: Router,\r\n    private Router: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.id !== null || this.id !== undefined || this.id !== 0) {\r\n      this.editLoad(this.id);\r\n    }\r\n  }\r\n  back() {\r\n    this.location.back();\r\n  }\r\n\r\n  locationData: locationModel = {\r\n    id: 0,\r\n    TownShip: \"\",\r\n    deliveryCharges: 0,\r\n    riderEarning: 0,\r\n  };\r\n  editLoad(id) {\r\n    this.appSetting.showLoading();\r\n    if (id !== 0) {\r\n      this.LocationService.getSingle(id).subscribe(\r\n        (x) => (this.locationData = x),\r\n        (err) => this.appSetting.showError(err),\r\n        () => this.appSetting.loadingClose()\r\n      );\r\n    } else {\r\n      this.appSetting.loadingClose();\r\n    }\r\n  }\r\n  formValidation(): boolean {\r\n    if (\r\n      this.locationData.TownShip === \"\" ||\r\n      this.locationData.deliveryCharges === 0 \r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  create() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.LocationService.post(this.locationData);\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.LocationService.put(this.locationData);\r\n      // this.route.navigateByUrl('tabs/tab3/resturantList');\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vbG9jYXRpb24tbGlzdC9sb2NhdGlvbi1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Router } from \"@angular/router\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { LocationService } from \"src/app/Services/location/location.service\";\r\nimport { Location } from \"@angular/common\";\r\nimport { locationModel } from \"src/app/Models/locationModel\";\r\n\r\n@Component({\r\n  selector: \"app-location-list\",\r\n  templateUrl: \"./location-list.component.html\",\r\n  styleUrls: [\"./location-list.component.scss\"],\r\n})\r\nexport class LocationListComponent implements OnInit {\r\n  locationDataList: locationModel[] = [];\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    public LocationService: LocationService,\r\n    private route: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.dataLoading();\r\n  }\r\n\r\n  back() {\r\n    this.location.back();\r\n  }\r\n  dataLoading() {\r\n    this.LocationService.get().subscribe(\r\n      (x) => {\r\n        this.appSetting.showLoading();\r\n        this.locationDataList = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n\r\n      () => {\r\n        this.appSetting.loadingClose();\r\n      }\r\n    );\r\n  }\r\n  refresh(event) {\r\n    this.LocationService.get().subscribe(\r\n      (x) => {\r\n        this.locationDataList = x;\r\n      },\r\n      (err) => {\r\n        this.appSetting.showError(err);\r\n        event.target.complete();\r\n      },\r\n\r\n      () => {\r\n        if (event !== undefined || event !== null) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEdit(id) {\r\n    this.route.navigateByUrl(\"tabs/tab3/locationEdit/\" + id);\r\n  }\r\n\r\n  onDelete(id) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.LocationService.delete(id);\r\n        this.locationDataList.splice(id, 1);\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \".report {\\n  min-height: 200px !important;\\n  max-height: 200px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMy9hZG1pbi9tYWluLXBhZ2UvRDpcXHNpZGVDYXIvc3JjXFxhcHBcXHRhYjNcXGFkbWluXFxtYWluLXBhZ2VcXG1haW4tcGFnZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdGFiMy9hZG1pbi9tYWluLXBhZ2UvbWFpbi1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNEJBQUE7RUFDQSw0QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdGFiMy9hZG1pbi9tYWluLXBhZ2UvbWFpbi1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlcG9ydHtcclxuICAgIG1pbi1oZWlnaHQ6IDIwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBtYXgtaGVpZ2h0OiAyMDBweCAhaW1wb3J0YW50O1xyXG59IiwiLnJlcG9ydCB7XG4gIG1pbi1oZWlnaHQ6IDIwMHB4ICFpbXBvcnRhbnQ7XG4gIG1heC1oZWlnaHQ6IDIwMHB4ICFpbXBvcnRhbnQ7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.scss'],\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vb3BlbmluZy1jcmVhdGUvb3BlbmluZy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { userModel } from 'src/app/Models/userModel';\r\nimport { UserModelService } from 'src/app/Services/userModel/user-model.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { appSetting } from 'src/app/app-setting';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OpeningBalanceModel } from 'src/app/Models/openingBalanceModel';\r\nimport { OpeningBalanceService } from 'src/app/Services/openingBalance/opening-balance.service';\r\n\r\n@Component({\r\n  selector: 'app-opening-create',\r\n  templateUrl: './opening-create.component.html',\r\n  styleUrls: ['./opening-create.component.scss'],\r\n})\r\nexport class OpeningCreateComponent implements OnInit {\r\n  id = +this.Router.snapshot.paramMap.get(\"id\");\r\n  constructor(public location: Location,\r\n    public appSetting: appSetting,\r\n    private OpeningBalanceService: OpeningBalanceService,\r\n    private riderSelectService:UserModelService,\r\n    private route: Router,\r\n    private Router: ActivatedRoute) { \r\n      this.riderFilter();\r\n    }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.id !== null || this.id !== undefined || this.id !== 0) {\r\n      this.editLoad(this.id);\r\n    }\r\n  }\r\n  back() {\r\n    this.location.back();\r\n  }\r\n\r\n  resData: OpeningBalanceModel = {\r\n    id: 0,\r\n    openingAmount:0,\r\n    openingAmount_date:new Date(),\r\n    operatorID:this.appSetting.sessionUserID,\r\n    riderID:0\r\n  };\r\n\r\n  riderList:userModel[]=[];\r\n    riderFilter(){\r\n    let temp1:userModel[]=[];\r\n    this.riderSelectService.get().subscribe(x=>temp1=x,err=>this.appSetting.showError(err),()=>{\r\n    const temp2=temp1;\r\n    temp2.forEach(x=>{\r\n      if(x.usertype===3){\r\n        this.riderList.push(x);\r\n      }\r\n    })\r\n    })\r\n  }\r\n  editLoad(id) {\r\n    this.appSetting.showLoading();\r\n    if (id !== 0) {\r\n      this.OpeningBalanceService.getSingle(id).subscribe(\r\n        (x) => (this.resData = x),\r\n        (err) => this.appSetting.showError(err),\r\n        () => this.appSetting.loadingClose()\r\n      );\r\n    }\r\n    else {\r\n      this.appSetting.loadingClose();\r\n    }\r\n  }\r\n  formValidation(): boolean {\r\n    if (\r\n      this.resData.openingAmount === 0||\r\n      this.resData.operatorID === 0||\r\n      this.resData.riderID ===  0\r\n\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  create() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.OpeningBalanceService.post(this.resData);\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.OpeningBalanceService.put(this.resData);\r\n      // this.route.navigateByUrl('tabs/tab3/resturantList');\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vb3BlbmluZy1saXN0L29wZW5pbmctbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { userModel } from \"src/app/Models/userModel\";\r\nimport { UserModelService } from \"src/app/Services/userModel/user-model.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Location } from \"@angular/common\";\r\nimport Swal from \"sweetalert2\";\r\nimport { OpeningBalanceService } from \"src/app/Services/openingBalance/opening-balance.service\";\r\nimport { OpeningBalanceModel } from \"src/app/Models/openingBalanceModel\";\r\n\r\n@Component({\r\n  selector: \"app-opening-list\",\r\n  templateUrl: \"./opening-list.component.html\",\r\n  styleUrls: [\"./opening-list.component.scss\"],\r\n})\r\nexport class OpeningListComponent implements OnInit {\r\n  resDataList: OpeningBalanceModel[] = [];\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    public OpeningBalanceService: OpeningBalanceService,\r\n    private riderSelectService: UserModelService,\r\n    private route: Router\r\n  ) {\r\n    this.riderFilter();\r\n  }\r\n\r\n  riderList: userModel[] = [];\r\n  searchDate:Date=new Date();\r\n  dateChange(e) {\r\n    this.searchDate=e;\r\n    this.appSetting.showLoading();\r\n    console.log(e);\r\n    this.OpeningBalanceService.getDate(e).subscribe(\r\n      (x) => {this.resDataList=x},\r\n      (err) => this.appSetting.showError(err),\r\n      () => this.appSetting.loadingClose()\r\n    );\r\n  }\r\n  riderFilter() {\r\n    this.appSetting.showLoading();\r\n    let temp1: userModel[] = [];\r\n    this.riderSelectService.get().subscribe(\r\n      (x) => (temp1 = x),\r\n      (err) => this.appSetting.showError(err),\r\n      () => {\r\n        const temp2 = temp1;\r\n        temp2.forEach((x) => {\r\n          if (x.usertype === 3) {\r\n            this.riderList.push(x);\r\n          }\r\n        });\r\n        this.appSetting.loadingClose();\r\n      }\r\n    );\r\n  }\r\n\r\n  riderName(id): string {\r\n    let name = \"\";\r\n    const temp: userModel[] = [...this.riderList];\r\n    temp.forEach((x) => {\r\n      if (x.id === id) {\r\n        name = x.username;\r\n      }\r\n    });\r\n    return name;\r\n  }\r\n  ngOnInit() {\r\n    this.dataLoading();\r\n  }\r\n  back() {\r\n    this.location.back();\r\n  }\r\n  dataLoading() {\r\n    this.appSetting.showLoading();\r\n    this.OpeningBalanceService.get().subscribe(\r\n      (x) => {\r\n        this.resDataList = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n\r\n      () => {\r\n        this.appSetting.loadingClose();\r\n      }\r\n    );\r\n  }\r\n  refresh(event) {\r\n    this.OpeningBalanceService.get().subscribe(\r\n      (x) => {\r\n        this.resDataList = x;\r\n      },\r\n      (err) => {\r\n        this.appSetting.showError(err);\r\n        event.target.complete();\r\n      },\r\n\r\n      () => {\r\n        if (event !== undefined || event !== null) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEdit(id) {\r\n    this.route.navigateByUrl(\"tabs/tab3/openingBalanceEdit/\" + id);\r\n  }\r\n\r\n  onDelete(id) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.OpeningBalanceService.delete(id);\r\n        this.resDataList.splice(id, 1);\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vcmVzdHVyYW50LWNyZWF0ZS9yZXN0dXJhbnQtY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { appSetting } from 'src/app/app-setting';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { resturantModel } from 'src/app/Models/resturantModel';\r\nimport { ResturantModelService } from './../../../Services/resturantModel/resturant-model.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-resturant-create',\r\n  templateUrl: './resturant-create.component.html',\r\n  styleUrls: ['./resturant-create.component.scss'],\r\n})\r\nexport class ResturantCreateComponent implements OnInit {\r\n  id = +this.Router.snapshot.paramMap.get(\"id\");\r\n  constructor(public location: Location,\r\n    public appSetting: appSetting,\r\n    private ResturantModelService: ResturantModelService,\r\n    private route: Router,\r\n    private Router: ActivatedRoute) { }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.id !== null || this.id !== undefined || this.id !== 0) {\r\n      this.editLoad(this.id);\r\n    }\r\n  }\r\n  back() {\r\n    this.location.back();\r\n  }\r\n\r\n  credit:string=\"credit\";\r\n  debit:string=\"debit\";\r\n  resData: resturantModel = {\r\n    id: 0,\r\n    username: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    usertype: 2,\r\n    latitude: \"0\",\r\n    longitude: \"0\",\r\n    shopname: \"\",\r\n    resturantType:\"debit\"\r\n  };\r\n  editLoad(id) {\r\n    this.appSetting.showLoading();\r\n    if (id !== 0) {\r\n      this.ResturantModelService.getSingle(id).subscribe(\r\n        (x) => (this.resData = x),\r\n        (err) => this.appSetting.showError(err),\r\n        () => this.appSetting.loadingClose()\r\n      );\r\n    }\r\n    else {\r\n      this.appSetting.loadingClose();\r\n    }\r\n  }\r\n  formValidation(): boolean {\r\n    if (\r\n      this.resData.password === \"\" ||\r\n      this.resData.phone === \"\" ||\r\n      this.resData.username === \"\" ||\r\n      this.resData.usertype === 0 ||\r\n      this.resData.shopname === \"\"\r\n\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  create() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.ResturantModelService.post(this.resData);\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.ResturantModelService.put(this.resData);\r\n      // this.route.navigateByUrl('tabs/tab3/resturantList');\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vcmVzdHVyYW50LWxpc3QvcmVzdHVyYW50LWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { Router } from '@angular/router';\r\nimport { ResturantModelService } from \"./../../../Services/resturantModel/resturant-model.service\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Location } from \"@angular/common\";\r\nimport { resturantModel } from \"src/app/Models/resturantModel\";\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: \"app-resturant-list\",\r\n  templateUrl: \"./resturant-list.component.html\",\r\n  styleUrls: [\"./resturant-list.component.scss\"],\r\n})\r\nexport class ResturantListComponent implements OnInit {\r\n  resDataList: resturantModel[] = [];\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    public ResturantModelService: ResturantModelService,\r\n    private route: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.dataLoading();\r\n  }\r\n  back() {\r\n    this.location.back();\r\n  }\r\n  dataLoading() {\r\n    this.ResturantModelService.get().subscribe(\r\n      (x) => {\r\n        this.appSetting.showLoading();\r\n        this.resDataList = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n\r\n      () => {\r\n        this.appSetting.loadingClose();\r\n\r\n      }\r\n    );\r\n  }\r\n  refresh(event) {\r\n    this.ResturantModelService.get().subscribe(\r\n      (x) => {\r\n        this.resDataList = x;\r\n      },\r\n      (err) => { this.appSetting.showError(err); event.target.complete(); },\r\n\r\n      () => {\r\n        if (event !== undefined || event !== null) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEdit(id) {\r\n    this.route.navigateByUrl(\"tabs/tab3/resturantEdit/\" + id);\r\n  }\r\n\r\n  onDelete(id) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.ResturantModelService.delete(id);\r\n        this.resDataList.splice(id, 1);\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vcmlkZXItZWFybmluZy1jcmVhdGUvcmlkZXItZWFybmluZy1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { RiderEarningService } from './../../../Services/riderEarning/rider-earning.service';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\nimport { riderEarningModel } from 'src/app/Models/riderEarningModel';\r\n@Component({\r\n  selector: 'app-rider-earning-create',\r\n  templateUrl: './rider-earning-create.component.html',\r\n  styleUrls: ['./rider-earning-create.component.scss'],\r\n})\r\nexport class RiderEarningCreateComponent implements OnInit {\r\n  id = +this.Router.snapshot.paramMap.get(\"id\");\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    private RiderEarningService: RiderEarningService,\r\n    private route: Router,\r\n    private Router: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.id !== null || this.id !== undefined || this.id !== 0) {\r\n      this.editLoad(this.id);\r\n    }\r\n  }\r\n  back() {\r\n    this.location.back();\r\n  }\r\n\r\n  riderEarningData: riderEarningModel = {\r\n    id: 0,\r\n    deliveryCharges: 0,\r\n    riderEarning: 0,\r\n  };\r\n  editLoad(id) {\r\n    this.appSetting.showLoading();\r\n    if (id !== 0) {\r\n      this.RiderEarningService.getSingle(id).subscribe(\r\n        (x) => (this.riderEarningData = x),\r\n        (err) => this.appSetting.showError(err),\r\n        () => this.appSetting.loadingClose()\r\n      );\r\n    } else {\r\n      this.appSetting.loadingClose();\r\n    }\r\n  }\r\n  formValidation(): boolean {\r\n    if (\r\n      this.riderEarningData.deliveryCharges === 0 \r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  create() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.RiderEarningService.post(this.riderEarningData);\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.RiderEarningService.put(this.riderEarningData);\r\n      // this.route.navigateByUrl('tabs/tab3/resturantList');\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vcmlkZXItZWFybmluZy1saXN0L3JpZGVyLWVhcm5pbmctbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { appSetting } from 'src/app/app-setting';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { RiderEarningService } from 'src/app/Services/riderEarning/rider-earning.service';\r\nimport { riderEarningModel } from 'src/app/Models/riderEarningModel';\r\n\r\n@Component({\r\n  selector: 'app-rider-earning-list',\r\n  templateUrl: './rider-earning-list.component.html',\r\n  styleUrls: ['./rider-earning-list.component.scss'],\r\n})\r\nexport class RiderEarningListComponent implements OnInit {\r\n  DataList: riderEarningModel[] = [];\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    public riderEarningService: RiderEarningService,\r\n    private route: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.dataLoading();\r\n  }\r\n\r\n  back() {\r\n    this.location.back();\r\n  }\r\n  dataLoading() {\r\n    this.riderEarningService.get().subscribe(\r\n      (x) => {\r\n        this.appSetting.showLoading();\r\n        this.DataList = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n\r\n      () => {\r\n        this.appSetting.loadingClose();\r\n      }\r\n    );\r\n  }\r\n  refresh(event) {\r\n    this.riderEarningService.get().subscribe(\r\n      (x) => {\r\n        this.DataList = x;\r\n      },\r\n      (err) => {\r\n        this.appSetting.showError(err);\r\n        event.target.complete();\r\n      },\r\n\r\n      () => {\r\n        if (event !== undefined || event !== null) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEdit(id) {\r\n    this.route.navigateByUrl(\"tabs/tab3/riderEarningEdit/\" + id);\r\n  }\r\n\r\n  onDelete(id) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.riderEarningService.delete(id);\r\n        this.DataList.splice(id, 1);\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vdXNlci1jcmVhdGUvdXNlci1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { UserModelService } from \"./../../../Services/userModel/user-model.service\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { UserTypeService } from \"./../../../Services/userType/user-type.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Location } from \"@angular/common\";\r\nimport { userModel } from \"src/app/Models/userModel\";\r\nimport Swal from \"sweetalert2\";\r\nimport { userTypeModel } from 'src/app/Models/usertypeModel';\r\n\r\n@Component({\r\n  selector: \"app-user-create\",\r\n  templateUrl: \"./user-create.component.html\",\r\n  styleUrls: [\"./user-create.component.scss\"],\r\n})\r\nexport class UserCreateComponent implements OnInit {\r\n  id = +this.Router.snapshot.paramMap.get(\"id\");\r\n  userTypeData:userTypeModel[]=[];\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    private UserTypeService: UserTypeService,\r\n    private UserModelService: UserModelService,\r\n    private route: Router,\r\n    private Router: ActivatedRoute\r\n  ) {\r\n    if (this.appSetting.userTypeData.length === 0) {\r\n      this.appSetting.showLoading();\r\n      this.UserTypeService.get().subscribe(\r\n        (x) => (this.appSetting.userTypeData = x),\r\n        (err) => console.log(err),\r\n        () => {\r\n          console.log(\"ok\");\r\n          \r\n          this.userTypeData=[...this.appSetting.userTypeData];\r\n          let i=-1;\r\n          this.appSetting.userTypeData.forEach(x=>{\r\n            i=i+1;\r\n            if(x.usertypeName==='Resturant'){\r\n              this.userTypeData.splice(i,1);\r\n            }\r\n          });\r\n          this.appSetting.loadingClose();\r\n          \r\n        }\r\n      );\r\n    }\r\n\r\n    if (this.id !== null || this.id !== undefined || this.id !== 0) {\r\n      this.editLoad(this.id);\r\n    }\r\n  }\r\n  \r\n\r\n  userData: userModel = {\r\n    id: 0,\r\n    username: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    usertype: 0,\r\n    latitude: \"0\",\r\n    longitude: \"0\"\r\n  };\r\n  ngOnInit() { }\r\n  back() {\r\n    this.location.back();\r\n  }\r\n\r\n  editLoad(id) {\r\n    this.appSetting.showLoading();\r\n    if (id !== 0) {\r\n      this.UserModelService.getSingle(id).subscribe(\r\n        (x) => (this.userData = x),\r\n        (err) => this.appSetting.showError(err),\r\n        () => this.appSetting.loadingClose()\r\n      );\r\n    }\r\n    else {\r\n      this.appSetting.loadingClose();\r\n    }\r\n  }\r\n  formValidation(): boolean {\r\n    if (\r\n      this.userData.password === \"\" ||\r\n      this.userData.phone === \"\" ||\r\n      this.userData.username === \"\" ||\r\n      this.userData.usertype === 0\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  create() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.UserModelService.post(this.userData);\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.UserModelService.put(this.userData);\r\n      //this.route.navigateByUrl('tabs/tab3/userList');\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvYWRtaW4vdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Router } from \"@angular/router\";\r\nimport { UserModelService } from \"./../../../Services/userModel/user-model.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Location } from \"@angular/common\";\r\nimport { userModel } from \"src/app/Models/userModel\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-user-list\",\r\n  templateUrl: \"./user-list.component.html\",\r\n  styleUrls: [\"./user-list.component.scss\"],\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  userDataList: userModel[] = [];\r\n  constructor(\r\n    public appSetting: appSetting,\r\n    public location: Location,\r\n    private UserModelService: UserModelService,\r\n    private route: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.dataLoading();\r\n  }\r\n  back() {\r\n    this.location.back();\r\n  }\r\n\r\n  dataLoading() {\r\n    this.UserModelService.get().subscribe(\r\n      (x) => {\r\n        this.appSetting.showLoading();\r\n        this.userDataList = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n\r\n      () => {\r\n        this.appSetting.loadingClose();\r\n       \r\n      }\r\n    );\r\n  }\r\n  refresh(event){\r\n    this.UserModelService.get().subscribe(\r\n      (x) => {\r\n        this.userDataList = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n\r\n      () => {\r\n        if(event!==undefined||event!==null){\r\n        event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEdit(id) {\r\n    this.route.navigateByUrl(\"tabs/tab3/userEdit/\" + id);\r\n  }\r\n\r\n  onDelete(id) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.UserModelService.delete(id);\r\n        this.userDataList.splice(id, 1);\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvcmVzdHVyYW50L2Zvb2QtY3JlYXRlL2Zvb2QtY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Location } from \"@angular/common\";\r\nimport { FoodService } from \"src/app/Services/food/food.service\";\r\nimport { foodModel } from \"src/app/Models/foodModel\";\r\n\r\n@Component({\r\n  selector: \"app-food-create\",\r\n  templateUrl: \"./food-create.component.html\",\r\n  styleUrls: [\"./food-create.component.scss\"],\r\n})\r\nexport class FoodCreateComponent implements OnInit {\r\n  id = +this.Router.snapshot.paramMap.get(\"id\");\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    private FoodService: FoodService,\r\n    private route: Router,\r\n    private Router: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.id !== null || this.id !== undefined || this.id !== 0) {\r\n      this.editLoad(this.id);\r\n    }\r\n  }\r\n  back() {\r\n    this.location.back();\r\n  }\r\n\r\n  foodData: foodModel = {\r\n    id: 0,\r\n    itemName: \"\",\r\n    itemNameTemp: \"\",\r\n    resturant_id: this.appSetting.resturantID,\r\n    price: 0,\r\n    priceTemp: 0,\r\n    status: \"pending\",\r\n  };\r\n  editLoad(id) {\r\n    this.appSetting.showLoading();\r\n    if (id !== 0) {\r\n      this.FoodService.getSingle(id).subscribe(\r\n        (x) => (this.foodData = x),\r\n        (err) => this.appSetting.showError(err),\r\n        () => {\r\n          this.foodData.itemNameTemp = this.foodData.itemName;\r\n          this.foodData.priceTemp = this.foodData.price;\r\n          this.appSetting.loadingClose();\r\n        }\r\n      );\r\n    } else {\r\n      this.appSetting.loadingClose();\r\n    }\r\n  }\r\n  formValidation(): boolean {\r\n    if (this.foodData.itemName === \"\" || this.foodData.price === 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  create() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.FoodService.post(this.foodData);\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.appSetting.showLoading();\r\n    if (this.formValidation() === true) {\r\n      this.foodData.status = \"pending\";\r\n      this.FoodService.put(this.foodData);\r\n      // this.route.navigateByUrl('tabs/tab3/resturantList');\r\n    } else {\r\n      this.appSetting.showInvalid();\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvcmVzdHVyYW50L2Zvb2QtbGlzdC9mb29kLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Router } from \"@angular/router\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Location } from \"@angular/common\";\r\nimport { FoodService } from \"src/app/Services/food/food.service\";\r\nimport { foodModel } from \"src/app/Models/foodModel\";\r\n\r\n@Component({\r\n  selector: \"app-food-list\",\r\n  templateUrl: \"./food-list.component.html\",\r\n  styleUrls: [\"./food-list.component.scss\"],\r\n})\r\nexport class FoodListComponent implements OnInit {\r\n  constructor(\r\n    public location: Location,\r\n    public appSetting: appSetting,\r\n    public FoodService: FoodService,\r\n    private route: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.dataLoading();\r\n  }\r\n\r\n  back() {\r\n    this.location.back();\r\n  }\r\n  dataLoading() {\r\n    this.FoodService.get(this.appSetting.resturantID).subscribe(\r\n      (x) => {\r\n        this.appSetting.showLoading();\r\n        this.appSetting.foodDataList = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n\r\n      () => {\r\n        this.appSetting.loadingClose();\r\n      }\r\n    );\r\n  }\r\n\r\n  refresh(event) {\r\n    this.FoodService.get(this.appSetting.resturantID).subscribe(\r\n      (x) => {\r\n        this.appSetting.foodDataList = x;\r\n      },\r\n      (err) => {\r\n        this.appSetting.showError(err);\r\n        event.target.complete();\r\n      },\r\n\r\n      () => {\r\n        if (event !== undefined || event !== null) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEdit(id) {\r\n    this.route.navigateByUrl(\"tabs/tab3/foodEdit/\" + id);\r\n  }\r\n\r\n  onDelete(id) {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.FoodService.delete(id);\r\n\r\n        Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvcmVzdHVyYW50L3Jlcy1tYWluLXBhZ2UvcmVzLW1haW4tcGFnZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-res-main-page',\r\n  templateUrl: './res-main-page.component.html',\r\n  styleUrls: ['./res-main-page.component.scss'],\r\n})\r\nexport class ResMainPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","import { OpeningCreateComponent } from './admin/opening-create/opening-create.component';\r\nimport { OpeningListComponent } from './admin/opening-list/opening-list.component';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { Tab3Page } from \"./tab3.page\";\r\nimport { UserListComponent } from \"./admin/user-list/user-list.component\";\r\nimport { UserCreateComponent } from \"./admin/user-create/user-create.component\";\r\nimport { ResturantListComponent } from \"./admin/resturant-list/resturant-list.component\";\r\nimport { ResturantCreateComponent } from \"./admin/resturant-create/resturant-create.component\";\r\nimport { ItemConfirmComponent } from \"./admin/item-confirm/item-confirm.component\";\r\nimport { ItemConfirmDetailComponent } from \"./admin/item-confirm-detail/item-confirm-detail.component\";\r\nimport { LocationListComponent } from \"./admin/location-list/location-list.component\";\r\nimport { LocationCreateComponent } from \"./admin/location-create/location-create.component\";\r\nimport { FoodListComponent } from \"./resturant/food-list/food-list.component\";\r\nimport { FoodCreateComponent } from \"./resturant/food-create/food-create.component\";\r\nimport { RiderEarningCreateComponent } from './admin/rider-earning-create/rider-earning-create.component';\r\nimport { RiderEarningListComponent } from './admin/rider-earning-list/rider-earning-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: Tab3Page,\r\n  },\r\n  {\r\n    path: \"userList\",\r\n    component: UserListComponent,\r\n  },\r\n  {\r\n    path: \"userCreate\",\r\n    component: UserCreateComponent,\r\n  },\r\n  {\r\n    path: \"userEdit/:id\",\r\n    component: UserCreateComponent,\r\n  },\r\n  {\r\n    path: \"resturantList\",\r\n    component: ResturantListComponent,\r\n  },\r\n  {\r\n    path: \"resturantEdit/:id\",\r\n    component: ResturantCreateComponent,\r\n  },\r\n  {\r\n    path: \"resturantCreate\",\r\n    component: ResturantCreateComponent,\r\n  },\r\n  {\r\n    path: \"locationList\",\r\n    component: LocationListComponent,\r\n  },\r\n  {\r\n    path: \"locationEdit/:id\",\r\n    component: LocationCreateComponent,\r\n  },\r\n  {\r\n    path: \"locationCreate\",\r\n    component: LocationCreateComponent,\r\n  },\r\n  {\r\n    path: \"foodList\",\r\n    component: FoodListComponent,\r\n  },\r\n  {\r\n    path: \"foodList/:id\",\r\n    component: FoodListComponent,\r\n  },\r\n  {\r\n    path: \"foodEdit/:id\",\r\n    component: FoodCreateComponent,\r\n  },\r\n  {\r\n    path: \"foodCreate\",\r\n    component: FoodCreateComponent,\r\n  },\r\n  {\r\n    path: \"itemConfirm\",\r\n    component: ItemConfirmComponent,\r\n  },\r\n  {\r\n    path: \"itemConfirmDetail\",\r\n    component: ItemConfirmDetailComponent,\r\n  },\r\n  {\r\n    path: \"riderEarning\",\r\n    component: RiderEarningListComponent,\r\n  },\r\n  {\r\n    path: \"riderEarningCreate\",\r\n    component: RiderEarningCreateComponent,\r\n  },\r\n  {\r\n    path: \"riderEarningEdit/:id\",\r\n    component: RiderEarningCreateComponent,\r\n  },\r\n  {\r\n    path: \"openingBalance\",\r\n    component: OpeningListComponent,\r\n  },\r\n  {\r\n    path: \"openingBalanceCreate\",\r\n    component: OpeningCreateComponent,\r\n  },\r\n  {\r\n    path: \"openingBalanceEdit/:id\",\r\n    component: OpeningCreateComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class Tab3PageRoutingModule {}\r\n","import { OpeningListComponent } from './admin/opening-list/opening-list.component';\r\nimport { OpeningCreateComponent } from './admin/opening-create/opening-create.component';\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Tab3Page } from \"./tab3.page\";\r\nimport { ExploreContainerComponentModule } from \"../explore-container/explore-container.module\";\r\n\r\nimport { Tab3PageRoutingModule } from \"./tab3-routing.module\";\r\nimport { ItemConfirmComponent } from \"./admin/item-confirm/item-confirm.component\";\r\n\r\nimport { UserCreateComponent } from \"./admin/user-create/user-create.component\";\r\nimport { UserListComponent } from \"./admin/user-list/user-list.component\";\r\nimport { MainPageComponent } from \"./admin/main-page/main-page.component\";\r\nimport { ResturantCreateComponent } from \"./admin/resturant-create/resturant-create.component\";\r\nimport { ResturantListComponent } from \"./admin/resturant-list/resturant-list.component\";\r\nimport { LocationListComponent } from \"./admin/location-list/location-list.component\";\r\nimport { LocationCreateComponent } from \"./admin/location-create/location-create.component\";\r\nimport { ResMainPageComponent } from \"./resturant/res-main-page/res-main-page.component\";\r\nimport { FoodCreateComponent } from \"./resturant/food-create/food-create.component\";\r\nimport { FoodListComponent } from \"./resturant/food-list/food-list.component\";\r\nimport { RiderEarningListComponent } from './admin/rider-earning-list/rider-earning-list.component';\r\nimport { RiderEarningCreateComponent } from './admin/rider-earning-create/rider-earning-create.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ExploreContainerComponentModule,\r\n    RouterModule.forChild([{ path: \"\", component: Tab3Page }]),\r\n    Tab3PageRoutingModule,\r\n  ],\r\n  declarations: [\r\n    Tab3Page,\r\n    RiderEarningListComponent,\r\n    RiderEarningCreateComponent,\r\n    MainPageComponent,\r\n    UserListComponent,\r\n    UserCreateComponent,\r\n    ResturantListComponent,\r\n    ResturantCreateComponent,\r\n    ItemConfirmComponent,\r\n    LocationListComponent,\r\n    LocationCreateComponent,\r\n    ResMainPageComponent,\r\n    FoodCreateComponent,\r\n    FoodListComponent,\r\n    OpeningCreateComponent,\r\n    OpeningListComponent\r\n  ],\r\n})\r\nexport class Tab3PageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjMvdGFiMy5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\r\nimport { appSetting } from '../app-setting';\r\n\r\n@Component({\r\n  selector: 'app-tab3',\r\n  templateUrl: 'tab3.page.html',\r\n  styleUrls: ['tab3.page.scss']\r\n})\r\nexport class Tab3Page {\r\n\r\n  constructor(public appSetting:appSetting) {}\r\n\r\n}\r\n"]}