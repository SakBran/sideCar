{"version":3,"sources":["webpack:///src/app/login/login-from/login-from.component.html","webpack:///src/app/login/login-from/login-from.component.scss","webpack:///src/app/login/login-from/login-from.component.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts"],"names":["LoginFromComponent","router","userService","appSetting","userTypeService","username","password","passwordVisibility","userData","id","usertype","phone","latitude","longitude","navigator","geolocation","getCurrentPosition","position","coords","toString","putLocation","showLoading","console","log","getLogin","subscribe","x","sessionUserID","err","showError","loginFail","getSingle","y","loginType","usertypeName","toLocaleLowerCase","resturantID","setInterval","locationUpdate","loginSuccess","navigateByUrl","selector","template","routes","path","component","loadChildren","then","m","TabsPageModule","canActivate","LoginRoutingModule","imports","forChild","exports","LoginModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAaA,kBAAkB;AAC7B,kCAEUC,MAFV,EAGUC,WAHV,EAIUC,UAJV,EAKUC,eALV,EAK0C;AAAA;;AAHhC,aAAAH,MAAA,GAAAA,MAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AAMV,aAAAC,QAAA,GAAmB,EAAnB;AACA,aAAAC,QAAA,GAAmB,EAAnB;AACA,aAAAC,kBAAA,GAAqB,UAArB;AASA,aAAAC,QAAA,GAAsB;AACpBC,YAAE,EAAE,CADgB;AAEpBJ,kBAAQ,EAAE,EAFU;AAGpBC,kBAAQ,EAAE,EAHU;AAIpBI,kBAAQ,EAAE,CAJU;AAKpBC,eAAK,EAAE,EALa;AAMpBC,kBAAQ,EAAE,EANU;AAOpBC,mBAAS,EAAE;AAPS,SAAtB;AAdC;;AAT4B;AAAA;AAAA,mCAWlB,CAAE;AAXgB;AAAA;AAAA,sCAef;AACZ,cAAI,KAAKN,kBAAL,KAA4B,UAAhC,EAA4C;AAC1C,iBAAKA,kBAAL,GAA0B,MAA1B;AACD,WAFD,MAEO;AACL,iBAAKA,kBAAL,GAA0B,UAA1B;AACD;AACF;AArB4B;AAAA;AAAA,yCAgCf;AAAA;;AACZ,cAAIO,SAAS,CAACC,WAAd,EAA2B;AACzBD,qBAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACnD,mBAAI,CAACT,QAAL,CAAcI,QAAd,GAAyBK,QAAQ,CAACC,MAAT,CAAgBN,QAAhB,CAAyBO,QAAzB,EAAzB;AACA,mBAAI,CAACX,QAAL,CAAcK,SAAd,GAA0BI,QAAQ,CAACC,MAAT,CAAgBL,SAAhB,CAA0BM,QAA1B,EAA1B;;AACA,mBAAI,CAACjB,WAAL,CAAiBkB,WAAjB,CAA6B,KAAI,CAACZ,QAAlC;AACD,aAJD;AAKD;AACF;AAxC4B;AAAA;AAAA,kCAyCnB;AAAA;;AACR,eAAKL,UAAL,CAAgBkB,WAAhB;AACAC,iBAAO,CAACC,GAAR,CAAY,KAAKlB,QAAjB;AACAiB,iBAAO,CAACC,GAAR,CAAY,KAAKjB,QAAjB;AAEA,eAAKJ,WAAL,CAAiBsB,QAAjB,CAA0B,KAAKnB,QAA/B,EAAyC,KAAKC,QAA9C,EAAwDmB,SAAxD,CACE,UAACC,CAAD,EAAO;AACLJ,mBAAO,CAACC,GAAR,CAAYG,CAAZ;AACA,kBAAI,CAACvB,UAAL,CAAgBwB,aAAhB,GAAgCD,CAAC,CAACjB,EAAlC;AACA,kBAAI,CAACD,QAAL,GAAgBkB,CAAhB;AACD,WALH,EAME,UAACE,GAAD;AAAA,mBAAS,MAAI,CAACzB,UAAL,CAAgB0B,SAAhB,CAA0BD,GAA1B,CAAT;AAAA,WANF,EAOE,YAAM;AACJ,gBAAI,MAAI,CAACzB,UAAL,CAAgBwB,aAAhB,KAAkC,CAAtC,EAAyC;AACvC,oBAAI,CAACxB,UAAL,CAAgB2B,SAAhB;AACD,aAFD,MAEO;AACL,oBAAI,CAAC1B,eAAL,CAAqB2B,SAArB,CAA+B,MAAI,CAACvB,QAAL,CAAcE,QAA7C,EAAuDe,SAAvD,CACE,UAACO,CAAD,EAAO;AACL,sBAAI,CAAC7B,UAAL,CAAgB8B,SAAhB,GAA4BD,CAAC,CAACE,YAAF,CAAeC,iBAAf,EAA5B;AAED,eAJH,EAKE,UAACP,GAAD;AAAA,uBAAS,MAAI,CAACzB,UAAL,CAAgB0B,SAAhB,CAA0BD,GAA1B,CAAT;AAAA,eALF,EAME,YAAM;AACJ,oBAAI,MAAI,CAACzB,UAAL,CAAgB8B,SAAhB,KAA8B,WAAlC,EAA+C;AAC7C,wBAAI,CAAC9B,UAAL,CAAgBiC,WAAhB,GAA8B,MAAI,CAACjC,UAAL,CAAgBwB,aAA9C;AACD;;AACDL,uBAAO,CAACC,GAAR,CAAY,SAAS,MAAI,CAACpB,UAAL,CAAgB8B,SAArC;;AACA,oBAAI,MAAI,CAAC9B,UAAL,CAAgB8B,SAAhB,KAA8B,OAAlC,EAA2C;AACzCI,6BAAW,CAAC,YAAM;AAChB;AACH,0BAAI,CAACC,cAAL;;AACGhB,2BAAO,CAACC,GAAR,CAAY,kBAAZ;AAED,mBALU,EAKR,KALQ,CAAX;AAMD;;AACD,sBAAI,CAACpB,UAAL,CAAgBoC,YAAhB;;AACA,sBAAI,CAACtC,MAAL,CAAYuC,aAAZ,CAA0B,OAA1B;AAED,eAtBH;AAwBD;AACF,WApCH;AAsCD;AApF4B;;AAAA;AAAA,OAA/B;;;;cAGoB;;cACK;;cACD;;cACK;;;;AANhBxC,sBAAkB,6DAL9B,gEAAU;AACTyC,cAAQ,EAAE,gBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,+GAFS;;;;AAAA,KAAV,CAK8B,GAAlB1C,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,QAAM2C,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AACWC,eAAS,EAAC;AADrB,KADqB,EAKrB;AACED,UAAI,EAAE,EADR;AAEEE,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA;AAAA;AAAA,0CAA8BC,IAA9B,CAAmC,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,cAAN;AAAA,SAApC,CAAN;AAAA,OAFhB;AAGEC,iBAAW,EAAE,CAAC,gEAAD;AAHf,KALqB,CAAvB;;AAgBA,QAAaC,kBAAkB;AAAA;AAAA,KAA/B;;AAAaA,sBAAkB,6DAJ9B,+DAAS;AACRC,aAAO,EAAE,CAAC,0DAAD,EAAa,6DAAaC,QAAb,CAAsBV,MAAtB,CAAb,CADD;AAERW,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAI8B,GAAlBH,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,QAAaI,WAAW;AAAA;AAAA,KAAxB;;AAAaA,eAAW,6DARvB,+DAAS;AACRC,kBAAY,EAAE,CAAC,mFAAD,CADN;AAERJ,aAAO,EAAE,CAAC,0DAAD,EACP,4DADO,EACM,0DADN,EAEP,wEAFO;AAFD,KAAT,CAQuB,GAAXG,WAAW,CAAX","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-toolbar color=\\\"light\\\">\\r\\n  <ion-title>\\r\\n\\r\\n  </ion-title>\\r\\n</ion-toolbar>\\r\\n<ion-toolbar color=\\\"light\\\">\\r\\n  <ion-title>\\r\\n\\r\\n  </ion-title>\\r\\n</ion-toolbar>\\r\\n<ion-content color=\\\"light\\\" padding>\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <ion-grid>\\r\\n        <ion-row color=\\\"primary\\\" justify-content-center>\\r\\n          <ion-col>\\r\\n\\r\\n            <div padding>\\r\\n              <ion-card>\\r\\n                <ion-item>\\r\\n                  <ion-avatar slot=\\\"start\\\">\\r\\n                    <img src='/../assets/person.svg'>\\r\\n                  </ion-avatar>\\r\\n                  <ion-label>\\r\\n                    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"this.username\\\" placeholder=\\\"Username\\\"></ion-input>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n            </div>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <div padding>\\r\\n              <ion-card>\\r\\n                <ion-item>\\r\\n                  <ion-avatar slot=\\\"start\\\">\\r\\n                    <img src='/../assets/key.svg'>\\r\\n                  </ion-avatar>\\r\\n                  <ion-label>\\r\\n                    <ion-input [(ngModel)]=\\\"this.password\\\" type=\\\"{{this.passwordVisibility}}\\\" placeholder=\\\"Password\\\">\\r\\n                    </ion-input>\\r\\n                  </ion-label>\\r\\n                  <ion-button (click)=\\\"passVisible()\\\" color=\\\"light\\\">\\r\\n                    <ion-icon *ngIf=\\\"this.passwordVisibility === 'password'\\\" name=\\\"eye-outline\\\"></ion-icon>\\r\\n                    <ion-icon *ngIf=\\\"this.passwordVisibility === 'text'\\\" name=\\\"eye-off-outline\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n            </div>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button (click)=\\\"onClick()\\\" expand=\\\"block\\\" color=\\\"primary\\\">\\r\\n              Cancel\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button (click)=\\\"onClick()\\\" expand=\\\"block\\\" color=\\\"primary\\\">\\r\\n              Login\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n\\r\\n\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\\r\\n<ion-toolbar color=\\\"light\\\">\\r\\n\\r\\n  <ion-text color=\\\"\\\" class=\\\"ion-align-items-center\\\">\\r\\n    <div style=\\\"text-align: center;\\\">\\r\\n      <p>All Rights Reserved. â„¢ by <a target=\\\"_blank\\\" color=\\\"light\\\" href=\\\"https://sakbran.github.io\\\">Sak Bran</a></p>\\r\\n    </div>\\r\\n  </ion-text>\\r\\n\\r\\n\\r\\n</ion-toolbar>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLWZyb20vbG9naW4tZnJvbS5jb21wb25lbnQuc2NzcyJ9 */\";","import { userModel } from './../../Models/userModel';\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { UserModelService } from \"src/app/Services/userModel/user-model.service\";\r\nimport { UserTypeService } from \"src/app/Services/userType/user-type.service\";\r\n\r\n@Component({\r\n  selector: \"app-login-from\",\r\n  templateUrl: \"./login-from.component.html\",\r\n  styleUrls: [\"./login-from.component.scss\"],\r\n})\r\nexport class LoginFromComponent implements OnInit {\r\n  constructor(\r\n\r\n    private router: Router,\r\n    private userService: UserModelService,\r\n    private appSetting: appSetting,\r\n    private userTypeService: UserTypeService\r\n  ) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {}\r\n  username: string = \"\";\r\n  password: string = \"\";\r\n  passwordVisibility = \"password\";\r\n  passVisible() {\r\n    if (this.passwordVisibility === \"password\") {\r\n      this.passwordVisibility = \"text\";\r\n    } else {\r\n      this.passwordVisibility = \"password\";\r\n    }\r\n  }\r\n\r\n  userData: userModel = {\r\n    id: 0,\r\n    username: \"\",\r\n    password: \"\",\r\n    usertype: 0,\r\n    phone: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n  };\r\n  locationUpdate(){\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.userData.latitude = position.coords.latitude.toString();\r\n        this.userData.longitude = position.coords.longitude.toString();\r\n        this.userService.putLocation(this.userData);\r\n      });\r\n    }\r\n  }\r\n  onClick() {\r\n    this.appSetting.showLoading();\r\n    console.log(this.username);\r\n    console.log(this.password);\r\n\r\n    this.userService.getLogin(this.username, this.password).subscribe(\r\n      (x) => {\r\n        console.log(x);\r\n        this.appSetting.sessionUserID = x.id;\r\n        this.userData = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n      () => {\r\n        if (this.appSetting.sessionUserID === 0) {\r\n          this.appSetting.loginFail();\r\n        } else {\r\n          this.userTypeService.getSingle(this.userData.usertype).subscribe(\r\n            (y) => {\r\n              this.appSetting.loginType = y.usertypeName.toLocaleLowerCase();\r\n              \r\n            },\r\n            (err) => this.appSetting.showError(err),\r\n            () => {\r\n              if (this.appSetting.loginType === \"resturant\") {\r\n                this.appSetting.resturantID = this.appSetting.sessionUserID;\r\n              }\r\n              console.log(\"Type\" + this.appSetting.loginType);\r\n              if (this.appSetting.loginType === \"rider\") {\r\n                setInterval(() => {\r\n                  //this.locationUpdate();\r\n               this.locationUpdate();\r\n                  console.log(\"Interval running\");\r\n                 \r\n                }, 30000);\r\n              }\r\n              this.appSetting.loginSuccess();\r\n              this.router.navigateByUrl(\"/tabs\");\r\n\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginFromComponent } from './login-from/login-from.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthGuardService } from '../auth/authGuard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',component:LoginFromComponent\r\n  }\r\n  ,\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('../tabs/tabs.module').then(m => m.TabsPageModule),\r\n    canActivate: [AuthGuardService] \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [FormsModule,RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginFromComponent } from './login-from/login-from.component';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginFromComponent],\r\n  imports: [IonicModule,\r\n    CommonModule,FormsModule,\r\n    LoginRoutingModule\r\n  ],\r\n \r\n})\r\nexport class LoginModule { }\r\n"]}