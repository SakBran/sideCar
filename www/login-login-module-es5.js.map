{"version":3,"sources":["webpack:///src/app/login/login-from/login-from.component.html","webpack:///src/app/Services/userModel/user-model.service.ts","webpack:///src/app/login/login-from/login-from.component.scss","webpack:///src/app/login/login-from/login-from.component.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts"],"names":["UserModelService","http","appSetting","url","apiAddress","httpOptions","headers","get","username","password","console","log","id","searchUrl","data","post","subscribe","res","showSuccess","err","put","showError","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","DONE","open","send","providedIn","LoginFromComponent","router","userService","userTypeService","passwordVisibility","userData","usertype","phone","latitude","longitude","navigator","geolocation","getCurrentPosition","position","coords","toString","putLocation","showLoading","getLogin","x","sessionUserID","loginFail","getSingle","y","loginType","usertypeName","toLocaleLowerCase","resturantID","setInterval","locationUpdate","loginSuccess","navigateByUrl","selector","template","routes","path","component","loadChildren","then","m","TabsPageModule","canActivate","LoginRoutingModule","imports","forChild","exports","LoginModule","declarations"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-toolbar color=\\\"dark\\\">\\r\\n  <!----- <ion-buttons slot=\\\"start\\\">\\r\\n    <ion-button (click)=\\\"login()\\\">\\r\\n      <ion-icon class=\\\"title\\\" name=\\\"person-circle-outline\\\"></ion-icon>\\r\\n    </ion-button>\\r\\n  </ion-buttons>----->\\r\\n  <ion-buttons slot=\\\"end\\\">\\r\\n    <ion-button color=\\\"light\\\" routerLink=\\\"/\\\">\\r\\n      Back\\r\\n    </ion-button>\\r\\n  \\r\\n  </ion-buttons>\\r\\n  <ion-title class=\\\"title\\\" >\\r\\n    <table>\\r\\n      <tr>\\r\\n        <td>\\r\\n          <ion-img class=\\\"icon\\\" src=\\\"/../assets/icon/favicon.png\\\"></ion-img>\\r\\n        </td>\\r\\n        <td>&nbsp;Sidecar</td>\\r\\n      </tr>\\r\\n    </table></ion-title\\r\\n  >\\r\\n</ion-toolbar>\\r\\n<ion-toolbar color=\\\"light\\\">\\r\\n  <ion-title> </ion-title>\\r\\n</ion-toolbar>\\r\\n<ion-content color=\\\"light\\\" padding>\\r\\n \\r\\n    <div class=\\\"center\\\">\\r\\n      <ion-card class=\\\"loginCard\\\">\\r\\n        <ion-card-content>\\r\\n          <ion-grid>\\r\\n            <ion-row color=\\\"primary\\\" justify-content-center>\\r\\n              <ion-col>\\r\\n                <div padding>\\r\\n                  <ion-card>\\r\\n                    <ion-item>\\r\\n                      <ion-avatar slot=\\\"start\\\">\\r\\n                        <img\\r\\n                          class=\\\"icon\\\"\\r\\n                          src=\\\"/../assets/person-circle-outline.svg\\\"\\r\\n                        />\\r\\n                      </ion-avatar>\\r\\n                      <ion-label>\\r\\n                        <ion-input\\r\\n                          id=\\\"user\\\"\\r\\n                          type=\\\"text\\\"\\r\\n                          [(ngModel)]=\\\"this.username\\\"\\r\\n                          placeholder=\\\"Username\\\"\\r\\n                        ></ion-input>\\r\\n                      </ion-label>\\r\\n                    </ion-item>\\r\\n                  </ion-card>\\r\\n                </div>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <div padding>\\r\\n                  <ion-card>\\r\\n                    <ion-item>\\r\\n                      <ion-avatar slot=\\\"start\\\">\\r\\n                        <img class=\\\"icon\\\" src=\\\"/../assets/key-outline.svg\\\" />\\r\\n                      </ion-avatar>\\r\\n                      <ion-label>\\r\\n                        <ion-input\\r\\n                          [(ngModel)]=\\\"this.password\\\"\\r\\n                          [type]=\\\"this.passwordVisibility\\\"\\r\\n                          placeholder=\\\"Password\\\"\\r\\n                     \\r\\n                        >\\r\\n                        </ion-input>\\r\\n                      </ion-label>\\r\\n                    </ion-item>\\r\\n\\r\\n                    <ion-button\\r\\n                      expand=\\\"block\\\"\\r\\n                      (click)=\\\"passVisible()\\\"\\r\\n                      color=\\\"light\\\"\\r\\n                    >\\r\\n                      <ion-icon\\r\\n                        *ngIf=\\\"this.passwordVisibility === 'password'\\\"\\r\\n                        name=\\\"eye-outline\\\"\\r\\n                      ></ion-icon>\\r\\n                      <ion-icon\\r\\n                        *ngIf=\\\"this.passwordVisibility === 'text'\\\"\\r\\n                        name=\\\"eye-off-outline\\\"\\r\\n                      ></ion-icon>\\r\\n                    </ion-button>\\r\\n                  </ion-card>\\r\\n                </div>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col size=\\\"6\\\">\\r\\n                <ion-button routerLink=\\\"\\\" expand=\\\"block\\\" color=\\\"primary\\\">\\r\\n                  Cancel\\r\\n                </ion-button>\\r\\n              </ion-col>\\r\\n              <ion-col size=\\\"6\\\">\\r\\n                <ion-button (click)=\\\"onClick()\\\" expand=\\\"block\\\" color=\\\"primary\\\">\\r\\n                  Login\\r\\n                </ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </div>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-toolbar color=\\\"dark\\\">\\r\\n  <ion-text color=\\\"\\\" class=\\\"ion-align-items-center\\\">\\r\\n    <div style=\\\"text-align: center\\\">\\r\\n      <p>\\r\\n        All Rights Reserved. ™ by\\r\\n        <a target=\\\"_blank\\\" color=\\\"light\\\" href=\\\"https://sakbran.github.io\\\"\\r\\n          >Sak Bran</a\\r\\n        >\\r\\n      </p>\\r\\n    </div>\\r\\n  </ion-text>\\r\\n</ion-toolbar>\\r\\n\";","import { userModel } from './../../Models/userModel';\r\nimport { appSetting } from './../../app-setting';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserModelService {\r\n  private url = `${this.appSetting.apiAddress}/api/userModels`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient,private appSetting:appSetting) { }\r\n\r\n  get(): Observable<userModel[]> {\r\n    return this.http.get<userModel[]>(this.url);\r\n  }\r\n\r\n  getLogin(username:string,password:string): Observable<userModel>{\r\n    console.log(this.url+`/login?user=${username}&password=${password}`);\r\n    return this.http.get<userModel>(this.url+`/login?user=${username}&password=${password}`);\r\n  }\r\n  getAvailableRider(): Observable<userModel[]> {\r\n    return this.http.get<userModel[]>(this.url+`/availableRider`);\r\n  }\r\n  \r\n  getDeliveringRider(): Observable<userModel[]> {\r\n    return this.http.get<userModel[]>(this.url+`/deliveringRider`);\r\n  }\r\n  \r\n  getSingle(id: number): Observable<userModel> {\r\n    const searchUrl = `${this.url}/${id}`;\r\n    return this.http.get<userModel>(searchUrl);\r\n  }\r\n  post(data: userModel): void {\r\n    this.http.post(this.url, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  put(data: userModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  putLocation(data: userModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        \r\n      },\r\n      err => {\r\n        console.log(err);\r\n       \r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number): void {\r\n    const data = null;\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n\r\n    xhr.addEventListener('readystatechange', function() {\r\n      if (this.readyState === this.DONE) {\r\n        \r\n      }\r\n    });\r\n\r\n    xhr.open('DELETE', this.url + '/' + id);\r\n\r\n    xhr.send(data);\r\n  }\r\n}\r\n","export default \"img.icon {\\n  border-radius: 0px;\\n  max-width: 20px;\\n  max-height: 20px;\\n}\\n\\nion-card.loginCard {\\n  max-width: 500px;\\n  text-align: center;\\n}\\n\\ndiv.center {\\n  text-align: center;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nion-img.icon {\\n  max-width: 30px;\\n  max-height: 30px;\\n  background-color: white;\\n  border-radius: 25px;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4tZnJvbS9EOlxcc2lkZUNhci9zcmNcXGFwcFxcbG9naW5cXGxvZ2luLWZyb21cXGxvZ2luLWZyb20uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2xvZ2luL2xvZ2luLWZyb20vbG9naW4tZnJvbS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FES0E7RUFDSSxrQkFBQTtFQUNBLGFBQUE7RUFBZSxtQkFBQTtFQUFxQix1QkFBQTtBQ0F4Qzs7QURLQTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0FDRkoiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi1mcm9tL2xvZ2luLWZyb20uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWcuaWNvbntcclxuICAgIGJvcmRlci1yYWRpdXM6IDBweDtcclxuICAgIG1heC13aWR0aDogMjBweDtcclxuICAgIG1heC1oZWlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbmlvbi1jYXJkLmxvZ2luQ2FyZHtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBcclxuICAgXHJcbn1cclxuXHJcblxyXG5kaXYuY2VudGVye1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcblxyXG5cclxuaW9uLWltZy5pY29ue1xyXG4gICAgbWF4LXdpZHRoOiAzMHB4O1xyXG4gICAgbWF4LWhlaWdodDogMzBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6d2hpdGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59IiwiaW1nLmljb24ge1xuICBib3JkZXItcmFkaXVzOiAwcHg7XG4gIG1heC13aWR0aDogMjBweDtcbiAgbWF4LWhlaWdodDogMjBweDtcbn1cblxuaW9uLWNhcmQubG9naW5DYXJkIHtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5kaXYuY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuaW9uLWltZy5pY29uIHtcbiAgbWF4LXdpZHRoOiAzMHB4O1xuICBtYXgtaGVpZ2h0OiAzMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { userModel } from \"./../../Models/userModel\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { UserModelService } from \"src/app/Services/userModel/user-model.service\";\r\nimport { UserTypeService } from \"src/app/Services/userType/user-type.service\";\r\n\r\n@Component({\r\n  selector: \"app-login-from\",\r\n  templateUrl: \"./login-from.component.html\",\r\n  styleUrls: [\"./login-from.component.scss\"],\r\n})\r\nexport class LoginFromComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private userService: UserModelService,\r\n    private appSetting: appSetting,\r\n    private userTypeService: UserTypeService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n  username: string = \"\";\r\n  password: string = \"\";\r\n  passwordVisibility = \"password\";\r\n  passVisible() {\r\n    if (this.passwordVisibility === \"password\") {\r\n      this.passwordVisibility = \"text\";\r\n    } else {\r\n      this.passwordVisibility = \"password\";\r\n    }\r\n    \r\n  }\r\n\r\n  userData: userModel = {\r\n    id: 0,\r\n    username: \"\",\r\n    password: \"\",\r\n    usertype: 0,\r\n    phone: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n  };\r\n\r\n  \r\n  locationUpdate() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        this.userData.latitude = position.coords.latitude.toString();\r\n        this.userData.longitude = position.coords.longitude.toString();\r\n\r\n        this.userService.putLocation(this.userData);\r\n      });\r\n    }\r\n  }\r\n  onClick() {\r\n    this.appSetting.showLoading();\r\n\r\n    this.userService.getLogin(this.username, this.password).subscribe(\r\n      (x) => {\r\n        this.appSetting.sessionUserID = x.id;\r\n        this.userData = x;\r\n      },\r\n      (err) => this.appSetting.loginFail(),\r\n      () => {\r\n        if (this.appSetting.sessionUserID === 0) {\r\n          this.appSetting.loginFail();\r\n        } else {\r\n          this.userTypeService.getSingle(this.userData.usertype).subscribe(\r\n            (y) => {\r\n              this.appSetting.loginType = y.usertypeName.toLocaleLowerCase();\r\n            },\r\n            (err) => this.appSetting.showError(err),\r\n            () => {\r\n              if (this.appSetting.loginType === \"resturant\") {\r\n                this.appSetting.resturantID = this.appSetting.sessionUserID;\r\n              }\r\n\r\n              if (this.appSetting.loginType === \"rider\") {\r\n                setInterval(() => {\r\n                  //this.locationUpdate();\r\n                  this.locationUpdate();\r\n                }, 10000);\r\n              }\r\n              this.appSetting.loginSuccess();\r\n              this.router.navigateByUrl(\"/managmenet\");\r\n            }\r\n          );\r\n        }\r\n        this.appSetting.loginSuccess();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginFromComponent } from './login-from/login-from.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthGuardService } from '../auth/authGuard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',component:LoginFromComponent\r\n  }\r\n  ,\r\n  {\r\n    path: 'managmenet',\r\n    loadChildren: () => import('../tabs/tabs.module').then(m => m.TabsPageModule),\r\n    canActivate: [AuthGuardService] \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [FormsModule,RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginFromComponent } from './login-from/login-from.component';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginFromComponent],\r\n  imports: [IonicModule,\r\n    CommonModule,FormsModule,\r\n    LoginRoutingModule\r\n  ],\r\n \r\n})\r\nexport class LoginModule { }\r\n"]}