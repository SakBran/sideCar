{"version":3,"sources":["webpack:///src/app/tab2/admin/item-edit/item-edit.component.html","webpack:///src/app/tab2/admin/item-list/item-list.component.html","webpack:///src/app/tab2/admin/main-page/main-page.component.html","webpack:///src/app/tab2/admin/rider-select/rider-select.component.html","webpack:///src/app/tab2/rider/main-rider-page/main-rider-page.component.html","webpack:///src/app/tab2/tab2.page.html","webpack:///src/app/Models/foodModel.ts","webpack:///src/app/Services/dailyReturn/daily-return.service.ts","webpack:///src/app/Services/location/location.service.ts","webpack:///src/app/Services/userModel/user-model.service.ts","webpack:///src/app/tab2/admin/item-edit/item-edit.component.scss","webpack:///src/app/tab2/admin/item-edit/item-edit.component.ts","webpack:///src/app/tab2/admin/item-list/item-list.component.scss","webpack:///src/app/tab2/admin/item-list/item-list.component.ts","webpack:///src/app/tab2/admin/main-page/main-page.component.scss","webpack:///src/app/tab2/admin/main-page/main-page.component.ts","webpack:///src/app/tab2/admin/rider-select/rider-select.component.scss","webpack:///src/app/tab2/admin/rider-select/rider-select.component.ts","webpack:///src/app/tab2/rider/main-rider-page/main-rider-page.component.scss","webpack:///src/app/tab2/rider/main-rider-page/main-rider-page.component.ts","webpack:///src/app/tab2/tab2-routing.module.ts","webpack:///src/app/tab2/tab2.module.ts","webpack:///src/app/tab2/tab2.page.scss","webpack:///src/app/tab2/tab2.page.ts"],"names":["foodModel","DailyReturnService","http","appSetting","url","apiAddress","httpOptions","headers","riderID","date","get","providedIn","LocationService","id","searchUrl","data","post","subscribe","res","showSuccess","err","console","log","put","showError","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","DONE","open","send","UserModelService","username","password","ItemEditComponent","Router","location","route","foodData","orderDetail","orderDetailID","itemID","itemQty","itemOrgPrice","discount","itemFinalPrice","orderID","status","remark","comment","isPickUpResturant","isPickUpRider","snapshot","paramMap","loadData","navigateByUrl","result","i","temp","orderDetailList","forEach","x","loadFoodData","constFoodDataList","price","toString","validation","itemJ","itemJoin","orderDetialModel","itemName","resturantName","resturant","z","orderDetailViewList","selector","template","ItemListComponent","orderService","list","revceiveOpt","locationReload","adminTab2Process","locationDataList","length","event","target","complete","e","orderData","Township_id","deliveryCharegs","deliveryCharges","resName","resturant_id","splice","showLoading","orderModel","orderDetailModels","itemRest","MainPageComponent","RiderSelectComponent","router","rider","progressRider","riderSelection","loadAvailable","orderTransationList","getAvailableRider","loadingClose","riderLongitude","riderLatidude","tempDetial","tempDetail","tempLocation","resturandDataList","foodDB","menuFoodDataList","tempRes","tempResMethod","resIDlist","getUnique","locationDB","locationDBMethod","Math","min","apply","distanceCalculation","distanceList","y","push","distanceCal","latitude","longitude","dataList","array","uniqueArray","indexOf","getDeliveringRider","MainRiderPageComponent","datilyReturnService","dateData","Date","toISOString","deliverCharges","debit","credit","openingBalance","riderEarning","dailyReturnAmount","showInvalid","sessionUserID","routes","path","component","Tab2PageRoutingModule","imports","forChild","exports","Tab2PageModule","declarations","Tab2Page"],"mappings":"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","file":"tab2-tab2-module-es5.js","sourcesContent":["export default \"<ion-content>\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"/../assets/food.svg\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label lines=\\\"none\\\">\\r\\n          <h2>{{ this.foodData.itemName }}</h2>\\r\\n          <h3>{{ this.foodData.price }}</h3>\\r\\n          <h3>{{ this.appSetting.resName(foodData.resturant_id) }}</h3>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"/../assets/number.svg\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <h2>Please enter the quantity</h2>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"tertiary\\\" position=\\\"floating\\\">\\r\\n          <ion-icon name=\\\"calculator-outline\\\"></ion-icon> Quantity <ion-text *ngIf=\\\"this.orderDetail.itemQty===0\\\" color=\\\"danger\\\">\\r\\n            ***\\r\\n          </ion-text>\\r\\n        </ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"this.orderDetail.itemQty\\\" type=\\\"number\\\"></ion-input>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"/../assets/sale.svg\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <h2 color=\\\"primary\\\">Please enter the Discount amount</h2>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"tertiary\\\" position=\\\"floating\\\">\\r\\n          <ion-icon name=\\\"cash-outline\\\"></ion-icon> Discount\\r\\n        </ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"this.orderDetail.discount\\\" type=\\\"number\\\"></ion-input>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src=\\\"/../assets/remark.svg\\\" />\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <h2 color=\\\"primary\\\">Please enter remark</h2>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"tertiary\\\" position=\\\"floating\\\">\\r\\n          <ion-icon name=\\\"chatbubbles-outline\\\"></ion-icon> Remark\\r\\n        </ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"this.orderDetail.remark\\\" type=\\\"text\\\"></ion-input>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-item lines=\\\"none\\\">\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"/../assets/money.svg\\\" />\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <h2>Total</h2>\\r\\n        <h3>{{this.totalAmount()}}</h3>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-grid fixed>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"6\\\">\\r\\n        <ion-button expand=\\\"block\\\" (click)=\\\"this.back()\\\" color=\\\"light\\\">\\r\\n          Back\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"6\\\">\\r\\n        <ion-button expand=\\\"block\\\" (click)=\\\"this.addToInvoice()\\\" color=\\\"light\\\">\\r\\n          Update Invoice\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\";","export default \"<ion-content>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-card *ngFor=\\\"let i of this.appSetting.orderDetailViewList;let x=index;\\\">\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src='/../assets/food.svg'>\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <h2>{{i.itemName}}</h2>\\r\\n          <h3>Quantity {{i.orderDetialModel.itemQty}}</h3>\\r\\n          <h3>Price {{i.orderDetialModel.itemFinalPrice}}</h3>\\r\\n          <h3>{{i.resturantName}}</h3>\\r\\n        </ion-label>\\r\\n        <ion-button routerLink='/tabs/tab2/itemEdit/{{x}}' color=\\\"secondary\\\">\\r\\n          <ion-icon name=\\\"create-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n        <ion-button (click)=\\\"deleteInvoice(x)\\\" color=\\\"danger\\\">\\r\\n          <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n        </ion-button>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src='/../assets/person.svg'>\\r\\n        </ion-avatar>\\r\\n        <ion-label color=\\\"primary\\\">\\r\\n          <h2>Customer Information</h2>\\r\\n        </ion-label>\\r\\n\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Name</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"this.appSetting.orderData.clientName\\\" type=\\\"text\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Phone</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"this.appSetting.orderData.clitentPhone\\\" type=\\\"tel\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Township</ion-label>\\r\\n        <ion-select [(ngModel)]=\\\"this.appSetting.orderData.Township_id\\\" (ngModelChange)=\\\"deliverChange($event)\\\">\\r\\n          <ion-select-option *ngFor=\\\"let item of this.appSetting.locationDataList;let i=index;\\\" [value]=\\\"item.id\\\">\\r\\n            {{i+1}}.{{item.TownShip}}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Flat No</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"this.appSetting.orderData.clitentFlatNo\\\" type=\\\"number\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Address</ion-label>\\r\\n        <ion-textarea [(ngModel)]=\\\"this.appSetting.orderData.clientAddress\\\"></ion-textarea>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src='/../assets/food-delivery.svg'>\\r\\n        </ion-avatar>\\r\\n        <ion-label color=\\\"primary\\\">\\r\\n          <h2>Delivery Information</h2>\\r\\n        </ion-label>\\r\\n\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Charges</ion-label>\\r\\n        <ion-input [(ngModel)]=\\\"this.appSetting.orderData.deliveryCharegs\\\" type=\\\"number\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Date for Delivery</ion-label>\\r\\n        <ion-datetime ionCancel [(ngModel)]=\\\"this.appSetting.orderData.deliveryDate\\\"></ion-datetime>\\r\\n        <ion-label position=\\\"floating\\\">Time for Delivery</ion-label>\\r\\n        <ion-datetime [(ngModel)]=\\\"this.appSetting.orderData.deliveryDate\\\" display-format=\\\"h:mm A\\\"\\r\\n          picker-format=\\\"h:mm A\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Date for Pickup</ion-label>\\r\\n        <ion-datetime ionCancel [(ngModel)]=\\\"this.appSetting.orderData.pickupDate\\\"></ion-datetime>\\r\\n        <ion-label position=\\\"floating\\\">Time for Pickup</ion-label>\\r\\n        <ion-datetime [(ngModel)]=\\\"this.appSetting.orderData.pickupDate\\\" display-format=\\\"h:mm A\\\"\\r\\n          picker-format=\\\"h:mm A\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\r\\n      </ion-item>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <ion-item>\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <img src='/../assets/agreement.svg'>\\r\\n        </ion-avatar>\\r\\n        <ion-label color=\\\"primary\\\">\\r\\n          <h2>Cash Receive Information</h2>\\r\\n        </ion-label>\\r\\n\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Cash Receive Options</ion-label>\\r\\n          <ion-select [(ngModel)]=\\\"this.appSetting.orderData.riderTakeOption\\\">\\r\\n            <ion-select-option [value]=\\\"revceiveOpt[0]\\\">{{revceiveOpt[0]}}</ion-select-option>\\r\\n            <ion-select-option [value]=\\\"revceiveOpt[1]\\\">{{revceiveOpt[1]}}</ion-select-option>\\r\\n            <ion-select-option [value]=\\\"revceiveOpt[2]\\\">{{revceiveOpt[2]}}</ion-select-option>\\r\\n          </ion-select>\\r\\n      </ion-item>\\r\\n   \\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-grid fixed>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"6\\\">\\r\\n        <ion-button expand=\\\"block\\\" color=\\\"light\\\">\\r\\n          Cancel\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"6\\\">\\r\\n        <ion-button (click)=\\\"sendToResturant()\\\" expand=\\\"block\\\" color=\\\"light\\\">\\r\\n          Send To Resturant\\r\\n        </ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\";","export default \"<app-item-list *ngIf=\\\"this.appSetting.adminTab2Process==='list'\\\"></app-item-list>\\r\\n\\r\\n\\r\\n\";","export default \"<ion-header translucent>\\r\\n  <ion-toolbar>\\r\\n    <ion-segment value=\\\"all\\\">\\r\\n      <ion-segment-button (click)=\\\"this.loadAvailable()\\\" value=\\\"all\\\">\\r\\n        <ion-label>Available</ion-label>\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button (click)=\\\"this.loadInProgress()\\\" value=\\\"favorites\\\">\\r\\n        <ion-label>In Progrss</ion-label>\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content *ngIf=\\\"this.riderSelection === 'available'\\\">\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-card *ngFor=\\\"let i of rider\\\">\\r\\n    <ion-item>\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"/../assets/food-delivery.svg\\\" />\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <h2>{{ i.username }}</h2>\\r\\n        <h3>\\r\\n          ETD KM:{{ locationCalculate(i.longitude, i.latitude).toFixed(2) }}\\r\\n          Kilometer\\r\\n        </h3>\\r\\n        <p>Ph:{{ i.phone }}</p>\\r\\n      </ion-label>\\r\\n\\r\\n      <ion-button (click)=\\\"onSelect(i.id)\\\" color=\\\"secondary\\\">\\r\\n        Select\\r\\n      </ion-button>\\r\\n    </ion-item>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\\r\\n<ion-content *ngIf=\\\"this.riderSelection === 'inProgress'\\\">\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreshDelivering($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <ion-card *ngFor=\\\"let i of progressRider\\\">\\r\\n    <ion-item>\\r\\n      <ion-avatar slot=\\\"start\\\">\\r\\n        <img src=\\\"/../assets/food-delivery.svg\\\" />\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <h2>{{ i.username }}</h2>\\r\\n        <h3>\\r\\n          ETD KM:{{\\r\\n            locationCalculate(i.longitude, i.latitude).toFixed(2)\\r\\n          }}\\r\\n          Kilometer\\r\\n        </h3>\\r\\n\\r\\n        <p>Ph:{{ i.phone }}</p>\\r\\n      </ion-label>\\r\\n\\r\\n      <ion-button (click)=\\\"onSelect(i.id)\\\" color=\\\"secondary\\\">\\r\\n        Select\\r\\n      </ion-button>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\">\\r\\n      <ion-checkbox color=\\\"danger\\\" slot=\\\"start\\\"></ion-checkbox>\\r\\n      <ion-label color=\\\"danger\\\" checked readonnly>Emegency</ion-label>\\r\\n    </ion-item>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\";","export default \"<ion-card>\\r\\n  <ion-card-header>\\r\\n    <ion-card-subtitle color=\\\"dark\\\">Summary Report\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Date</ion-label>\\r\\n        <ion-datetime  ionCancel [(ngModel)]=\\\"this.dateData\\\"></ion-datetime>\\r\\n       \\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Status</ion-label>\\r\\n        <ion-text color=\\\"primary\\\">\\r\\n          <p>Pending</p>\\r\\n        </ion-text>\\r\\n      </ion-item>\\r\\n    </ion-card-subtitle>\\r\\n   \\r\\n  </ion-card-header>\\r\\n  <ion-card-content>\\r\\n  \\r\\n    <ion-item>\\r\\n      <ion-avatar slot=\\\"end\\\">\\r\\n        <img src=\\\"/../assets/agreement.svg\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <h3>Rider Earning</h3>\\r\\n        <p>{{this.data.riderEarning}} Kyats</p>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-avatar slot=\\\"end\\\">\\r\\n        <img src=\\\"/../assets/agreement.svg\\\">\\r\\n      </ion-avatar>\\r\\n      <ion-label>\\r\\n        <h3>ပြန်အပ်ရန်ငွေ</h3>\\r\\n        <p>{{this.data.dailyReturnAmount}} Kyats</p>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-button (click)=\\\"this.search()\\\" expand=\\\"block\\\">\\r\\n      Refresh Data\\r\\n    </ion-button>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","export default \"<ion-header [translucent]=\\\"true\\\" *ngIf=\\\"this.appSetting.adminTab2Process==='riderSelect'\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-grid fixed>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-chip>\\r\\n            <ion-icon name=\\\"chevron-back-circle-outline\\\"></ion-icon>\\r\\n            <ion-label>Back</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"5\\\">\\r\\n          \\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-chip>\\r\\n            <ion-icon name=\\\"search-outline\\\"></ion-icon>\\r\\n            <ion-label>Search</ion-label>\\r\\n          </ion-chip>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-header [translucent]=\\\"true\\\" *ngIf=\\\"this.appSetting.loginType==='rider'\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Today Sumary</ion-title>\\r\\n    <ion-progress-bar value=\\\"1\\\" buffer=\\\"0.5\\\"></ion-progress-bar>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <app-main-page *ngIf=\\\"this.appSetting.loginType==='admin'\\\"></app-main-page>\\r\\n  <app-main-rider-page *ngIf=\\\"this.appSetting.loginType==='rider'\\\"></app-main-rider-page>\\r\\n</ion-content>\";","export class foodModel {\r\n  id: number;\r\n  itemName: string;\r\n  itemNameTemp: string;\r\n  mainitem_id:number;\r\n  resturant_id: number;\r\n  price: number;\r\n  priceTemp: number;\r\n  status: string;\r\n  imageURI:string;\r\n  categoryType_ID:number;\r\n  Descriptions:string;\r\n}\r\n","import { appSetting } from \"./../../app-setting\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { dailyReturnModel } from 'src/app/Models/dailyReturnModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DailyReturnService {\r\n  private url = `${this.appSetting.apiAddress}/api/dailyReturn`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n  constructor(private http: HttpClient, private appSetting: appSetting) {}\r\n  get(riderID: number,date:String): Observable<dailyReturnModel> {\r\n  \r\n    return this.http.get<dailyReturnModel>(\r\n      this.url + `?riderID=${riderID}&date=${date}`\r\n    );\r\n  }\r\n}\r\n","import { appSetting } from \"./../../app-setting\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport Swal from \"sweetalert2\";\r\nimport { locationModel } from \"src/app/Models/locationModel\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LocationService {\r\n  private url = `${this.appSetting.apiAddress}/api/locationModels`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n  constructor(private http: HttpClient, private appSetting: appSetting) {}\r\n\r\n  get(): Observable<locationModel[]> {\r\n    return this.http.get<locationModel[]>(this.url);\r\n  }\r\n  getSingle(id: number): Observable<locationModel> {\r\n    const searchUrl = `${this.url}/${id}`;\r\n    return this.http.get<locationModel>(searchUrl);\r\n  }\r\n  post(data: locationModel): void {\r\n    this.http.post(this.url, data, this.httpOptions).subscribe(\r\n      (res) => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  put(data: locationModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      (res) => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number): void {\r\n    const data = null;\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n\r\n    xhr.addEventListener(\"readystatechange\", function () {\r\n      if (this.readyState === this.DONE) {\r\n        \r\n      }\r\n    });\r\n\r\n    xhr.open(\"DELETE\", this.url + \"/\" + id);\r\n\r\n    xhr.send(data);\r\n  }\r\n}\r\n","import { userModel } from './../../Models/userModel';\r\nimport { appSetting } from './../../app-setting';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserModelService {\r\n  private url = `${this.appSetting.apiAddress}/api/userModels`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient,private appSetting:appSetting) { }\r\n\r\n  get(): Observable<userModel[]> {\r\n    return this.http.get<userModel[]>(this.url);\r\n  }\r\n\r\n  getLogin(username:string,password:string): Observable<userModel>{\r\n    console.log(this.url+`/login?user=${username}&password=${password}`);\r\n    return this.http.get<userModel>(this.url+`/login?user=${username}&password=${password}`);\r\n  }\r\n  getAvailableRider(): Observable<userModel[]> {\r\n    return this.http.get<userModel[]>(this.url+`/availableRider`);\r\n  }\r\n  \r\n  getDeliveringRider(): Observable<userModel[]> {\r\n    return this.http.get<userModel[]>(this.url+`/deliveringRider`);\r\n  }\r\n  \r\n  getSingle(id: number): Observable<userModel> {\r\n    const searchUrl = `${this.url}/${id}`;\r\n    return this.http.get<userModel>(searchUrl);\r\n  }\r\n  post(data: userModel): void {\r\n    this.http.post(this.url, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  put(data: userModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  putLocation(data: userModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        \r\n      },\r\n      err => {\r\n        console.log(err);\r\n       \r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number): void {\r\n    const data = null;\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n\r\n    xhr.addEventListener('readystatechange', function() {\r\n      if (this.readyState === this.DONE) {\r\n        \r\n      }\r\n    });\r\n\r\n    xhr.open('DELETE', this.url + '/' + id);\r\n\r\n    xhr.send(data);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjIvYWRtaW4vaXRlbS1lZGl0L2l0ZW0tZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { orderModel } from './../../../Models/orderModel';\r\nimport { itemRest } from './../../../app-setting';\r\nimport { orderDetialViewmodel } from './../../../Models/orderDetailViewmodel';\r\nimport { orderDetialModel } from \"./../../../Models/orderDetailModel\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { foodModel } from \"src/app/Models/foodModel\";\r\nimport { Location } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-item-edit',\r\n  templateUrl: './item-edit.component.html',\r\n  styleUrls: ['./item-edit.component.scss'],\r\n})\r\nexport class ItemEditComponent implements OnInit {\r\n  foodData = new foodModel();\r\n  orderDetail: orderDetialModel = {\r\n    orderDetailID: 0,\r\n    itemID: this.foodData.id,\r\n    itemQty: 1,\r\n    itemOrgPrice: 0,\r\n    discount: 0,\r\n    itemFinalPrice: 0,\r\n    orderID: 0,\r\n    status:'pending',\r\n    remark: \"\",\r\n    comment:\"\",\r\n    isPickUpResturant:false,\r\n    isPickUpRider:false\r\n  };\r\n\r\n  id=+this.Router.snapshot.paramMap.get(\"id\");\r\n  constructor(\r\n    public appSetting: appSetting,\r\n    private Router: ActivatedRoute,\r\n    private location: Location,\r\n    private route:Router\r\n  ) {\r\n    this.id=+this.Router.snapshot.paramMap.get(\"id\");\r\n    this.foodData = this.loadData(this.id);\r\n   \r\n  }\r\n\r\n  back() {\r\n    this.route.navigateByUrl('/tabs/tab2');\r\n  }\r\n  loadData(id): foodModel {\r\n    let result = new foodModel();\r\n    let i=-1;\r\n    const temp=[...this.appSetting.orderDetailList];\r\n    temp.forEach((x) => {\r\n      i=i+1;\r\n\r\n      if(i===id){\r\n        \r\n        result=this.loadFoodData(x.itemID);\r\n        this.orderDetail=x;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  loadFoodData(id): foodModel {\r\n    let result = new foodModel();\r\n    const temp=[...this.appSetting.constFoodDataList]\r\n    temp.forEach((x) => {\r\n\r\n\r\n      if (x.id === id) {\r\n        \r\n        result = x;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n  totalAmount(): string {\r\n    if (this.orderDetail.itemQty !== 0) {\r\n      this.orderDetail.itemOrgPrice =\r\n        this.orderDetail.itemQty * this.foodData.price;\r\n      this.orderDetail.itemFinalPrice =\r\n        this.orderDetail.itemOrgPrice - this.orderDetail.discount;\r\n      return this.orderDetail.itemFinalPrice.toString();\r\n    } else {\r\n      return \"0\";\r\n    }\r\n  }\r\n\r\n  validation():boolean{\r\n    if(this.orderDetail.itemQty===0){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  addToInvoice(){\r\n    if(this.validation()){\r\n      let itemJ:itemRest=this.appSetting.itemJoin(this.foodData.id);\r\n    \r\n      let i=-1;\r\n      this.appSetting.orderDetailList.forEach(x=>{\r\n        i=i+1;\r\n        if(i===this.id){\r\n          x=this.orderDetail;\r\n        }\r\n      });\r\n      let temp:orderDetialViewmodel={\r\n        orderDetialModel:this.orderDetail,\r\n        itemName:itemJ.itemName,\r\n        resturantName:itemJ.resturant\r\n      }\r\n      let z=-1;\r\n      this.appSetting.orderDetailViewList.forEach(x=>{\r\n        z=z+1;\r\n        if(z===this.id){\r\n          x=temp;\r\n\r\n        }\r\n      });\r\n      \r\n    }\r\n    this.route.navigateByUrl('/tabs/tab2');\r\n  }\r\n  ngOnInit() {}\r\n}\r\n\r\n","export default \".card-background-page ion-card {\\n  position: relative;\\n  text-align: center;\\n  background-color: transparent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMi9hZG1pbi9pdGVtLWxpc3QvRDpcXHNpZGVDYXIvc3JjXFxhcHBcXHRhYjJcXGFkbWluXFxpdGVtLWxpc3RcXGl0ZW0tbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdGFiMi9hZG1pbi9pdGVtLWxpc3QvaXRlbS1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLDZCQUFBO0FDQU4iLCJmaWxlIjoic3JjL2FwcC90YWIyL2FkbWluL2l0ZW0tbGlzdC9pdGVtLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1iYWNrZ3JvdW5kLXBhZ2Uge1xyXG4gICAgaW9uLWNhcmQge1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICB9XHJcbn0iLCIuY2FyZC1iYWNrZ3JvdW5kLXBhZ2UgaW9uLWNhcmQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59Il19 */\";","import { orderModel } from './../../../Models/orderModel';\r\nimport { OrderService } from './../../../Services/order/order.service';\r\nimport { LocationService } from \"./../../../Services/location/location.service\";\r\nimport { locationModel } from \"./../../../Models/locationModel\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { orderTransationModel } from 'src/app/Models/orderTransationModel';\r\n\r\n@Component({\r\n  selector: \"app-item-list\",\r\n  templateUrl: \"./item-list.component.html\",\r\n  styleUrls: [\"./item-list.component.scss\"],\r\n})\r\nexport class ItemListComponent implements OnInit {\r\n  constructor(\r\n    public appSetting: appSetting,\r\n    private LocationService: LocationService,\r\n    private orderService:OrderService\r\n  ) {\r\n    this.locationReload();\r\n  }\r\n  list: number[] = [1, 2, 34, 5, 6];\r\n  ngOnInit() {}\r\n  editInvoice(i) {\r\n    this.appSetting.adminTab2Process = \"edit\";\r\n  }\r\n  riderSelect() {\r\n    this.appSetting.adminTab2Process = \"riderSelect\";\r\n  }\r\n\r\n  locationReload() {\r\n    if (this.appSetting.locationDataList.length === 0) {\r\n      this.LocationService.get().subscribe(\r\n        (x) => (this.appSetting.locationDataList = x)\r\n      );\r\n    }\r\n  }\r\n  refresh(event) { \r\n      this.LocationService.get().subscribe(\r\n        (x) => (this.appSetting.locationDataList = x),\r\n        (err) => this.appSetting.showError(err),\r\n        () => {\r\n          event.target.complete();\r\n        }\r\n      );\r\n    \r\n  }\r\n  deliverChange(e) {\r\n    this.appSetting.orderData.Township_id = e;\r\n    const temp: locationModel[] = [...this.appSetting.locationDataList];\r\n    temp.forEach((x) => {\r\n      if (x.id === e) {\r\n        this.appSetting.orderData.deliveryCharegs = x.deliveryCharges;\r\n      }\r\n    });\r\n  }\r\n\r\n  itemJoin(id): itemRest {\r\n    let i: itemRest = {\r\n      itemName: \"\",\r\n      resturant: \"\",\r\n    };\r\n    const temp = [...this.appSetting.constFoodDataList];\r\n    temp.forEach((x) => {\r\n      if (x.id === id) {\r\n        i.itemName = x.itemName;\r\n        i.resturant = this.appSetting.resName(x.resturant_id);\r\n      }\r\n    });\r\n    return i;\r\n  }\r\n\r\n  deleteInvoice(id) {\r\n    this.appSetting.orderDetailList.splice(id, 1);\r\n    this.appSetting.orderDetailViewList.splice(id, 1);\r\n  }\r\n\r\n  sendToResturant(){\r\n    this.appSetting.showLoading();\r\n   \r\n    let data:orderTransationModel={\r\n      orderModel:this.appSetting.orderData,\r\n      orderDetailModels:this.appSetting.orderDetailList\r\n    }\r\n  \r\n    this.orderService.post(data);\r\n  }\r\n\r\n  revceiveOpt:string[]=['All','COD','Epayment'];\r\n  \r\n}\r\n\r\nexport class itemRest {\r\n  itemName: string;\r\n  resturant: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjIvYWRtaW4vbWFpbi1wYWdlL21haW4tcGFnZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { appSetting } from 'src/app/app-setting';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.scss'],\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n\r\n  constructor(public appSetting:appSetting) {\r\n    this.appSetting.adminTab2Process='list';\r\n   }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjIvYWRtaW4vcmlkZXItc2VsZWN0L3JpZGVyLXNlbGVjdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { OrderService } from \"src/app/Services/order/order.service\";\r\nimport { appSetting } from \"./../../../app-setting\";\r\nimport { UserModelService } from \"./../../../Services/userModel/user-model.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { userModel } from \"src/app/Models/userModel\";\r\nimport { orderModel } from \"src/app/Models/orderModel\";\r\nimport { orderTransationModel } from \"src/app/Models/orderTransationModel\";\r\nimport { orderDetialModel } from \"src/app/Models/orderDetailModel\";\r\nimport { resturantModel } from \"src/app/Models/resturantModel\";\r\nimport { foodModel } from \"src/app/Models/foodModel\";\r\n\r\n@Component({\r\n  selector: \"app-rider-select\",\r\n  templateUrl: \"./rider-select.component.html\",\r\n  styleUrls: [\"./rider-select.component.scss\"],\r\n})\r\nexport class RiderSelectComponent implements OnInit {\r\n  rider: userModel[] = [];\r\n  progressRider: userModel[] = [];\r\n  id = 0;\r\n  data: orderModel = new orderModel();\r\n\r\n  riderSelection: string = \"available\";\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public appSetting: appSetting,\r\n    private router: Router,\r\n    private UserModelService: UserModelService,\r\n    private orderService: OrderService\r\n  ) {\r\n    this.id = +this.route.snapshot.paramMap.get(\"id\");\r\n    this.loadAvailable();\r\n    this.appSetting.orderTransationList.forEach((x) => {\r\n      if (x.orderModel.id === this.id) {\r\n        this.data = x.orderModel;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  loadAvailable() {\r\n    this.appSetting.showLoading();\r\n    this.UserModelService.getAvailableRider().subscribe(\r\n      (x) => (this.rider = x),\r\n      (err) => this.appSetting.showError(err),\r\n      () => {\r\n        this.riderSelection = \"available\";\r\n        this.appSetting.loadingClose();\r\n      }\r\n    );\r\n  }\r\n\r\n  locationCalculate(riderLongitude, riderLatidude) {\r\n    const temp: orderTransationModel[] = [\r\n      ...this.appSetting.orderTransationList,\r\n    ];\r\n    let tempDetial: orderDetialModel[] = this.tempDetail(temp);\r\n    const tempLocation: resturantModel[] = [\r\n      ...this.appSetting.resturandDataList,\r\n    ];\r\n\r\n    const foodDB: foodModel[] = [...this.appSetting.menuFoodDataList];\r\n    let tempRes: number[] = this.tempResMethod(foodDB, tempDetial);\r\n   \r\n    let resIDlist: number[] = this.getUnique(tempRes);\r\n    let locationDB: resturantModel[] = this.locationDBMethod(\r\n      tempLocation,\r\n      resIDlist\r\n    );\r\n\r\n    return (\r\n      Math.min.apply(\r\n        null,\r\n        this.distanceCalculation(locationDB, riderLatidude, riderLongitude)\r\n      ) / 1000\r\n    );\r\n  }\r\n\r\n  private distanceCalculation(\r\n    locationDB: resturantModel[],\r\n    riderLatidude: any,\r\n    riderLongitude: any\r\n  ): number[] {\r\n    let distanceList: number[] = [];\r\n    locationDB.forEach((y) => {\r\n      distanceList.push(\r\n        this.appSetting.distanceCal(\r\n          y.latitude,\r\n          y.longitude,\r\n          riderLatidude,\r\n          riderLongitude\r\n        )\r\n      );\r\n    });\r\n    return distanceList;\r\n  }\r\n\r\n  private locationDBMethod(\r\n    tempLocation: resturantModel[],\r\n    resIDlist: number[]\r\n  ) {\r\n    let locationDB: resturantModel[] = [];\r\n    tempLocation.forEach((x) => {\r\n      resIDlist.forEach((y) => {\r\n        if (y === x.id) {\r\n          locationDB.push(x);\r\n        }\r\n      });\r\n    });\r\n    return locationDB;\r\n  }\r\n\r\n  private tempResMethod(foodDB: foodModel[], tempDetial: orderDetialModel[]) {\r\n    let tempRes: number[] = [];\r\n    foodDB.forEach((x) => {\r\n      tempDetial.forEach((y) => {\r\n      \r\n        if (y.itemID === x.id) {\r\n          tempRes.push(x.resturant_id);\r\n        } else {\r\n     \r\n        }\r\n      });\r\n    });\r\n    return tempRes;\r\n  }\r\n\r\n  private tempDetail(temp: orderTransationModel[]): orderDetialModel[] {\r\n    let dataList: orderDetialModel[] = [];\r\n    temp.forEach((x) => {\r\n      x.orderDetailModels.forEach((y) => {\r\n        if (y.orderID === this.id) {\r\n          dataList.push(y);\r\n        }\r\n      });\r\n    });\r\n    return dataList;\r\n  }\r\n\r\n  getUnique(array) {\r\n    var uniqueArray = [];\r\n\r\n    // Loop through array values\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (uniqueArray.indexOf(array[i]) === -1) {\r\n        uniqueArray.push(array[i]);\r\n      }\r\n    }\r\n    return uniqueArray;\r\n  }\r\n  loadInProgress() {\r\n    this.appSetting.showLoading();\r\n    this.UserModelService.getDeliveringRider().subscribe(\r\n      (x) => (this.progressRider = x),\r\n      (err) => this.appSetting.showError(err),\r\n      () => {\r\n        this.riderSelection = \"inProgress\";\r\n        this.appSetting.loadingClose();\r\n      }\r\n    );\r\n  }\r\n\r\n  refresh(e) {\r\n    this.UserModelService.getAvailableRider().subscribe(\r\n      (x) => (this.rider = x),\r\n      (err) => this.appSetting.showError(err),\r\n      () => {\r\n        e.target.complete();\r\n      }\r\n    );\r\n  }\r\n\r\n  refreshDelivering(e) {\r\n    this.UserModelService.getDeliveringRider().subscribe(\r\n      (x) => (this.progressRider = x),\r\n      (err) => this.appSetting.showError(err),\r\n      () => {\r\n        e.target.complete();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSelect(id) {\r\n    this.appSetting.showLoading();\r\n    this.data.riderID = id;\r\n    this.data.status = \"delivering\";\r\n    this.orderService.put(this.data);\r\n    this.router.navigateByUrl(\"/managmenet/tabs/tab1/deliveryPending\");\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjIvcmlkZXIvbWFpbi1yaWRlci1wYWdlL21haW4tcmlkZXItcGFnZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { dailyReturnModel } from \"./../../../Models/dailyReturnModel\";\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { DailyReturnService } from \"src/app/Services/dailyReturn/daily-return.service\";\r\n\r\n@Component({\r\n  selector: \"app-main-rider-page\",\r\n  templateUrl: \"./main-rider-page.component.html\",\r\n  styleUrls: [\"./main-rider-page.component.scss\"],\r\n})\r\nexport class MainRiderPageComponent implements OnInit {\r\n  constructor(\r\n    private appSetting: appSetting,\r\n    private datilyReturnService: DailyReturnService\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {}\r\n  refresh() {\r\n   \r\n  }\r\n  dateData = new Date().toISOString();\r\n  search() {\r\n    if (this.dateData === \"\") {\r\n      this.appSetting.showInvalid();\r\n    } else {\r\n      this.appSetting.showLoading();\r\n      this.datilyReturnService\r\n        .get(this.appSetting.sessionUserID, this.dateData)\r\n        .subscribe(\r\n          (x) => (this.data = x),\r\n          (err) => this.appSetting.showError(err),\r\n          () => {\r\n          \r\n            this.appSetting.loadingClose();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  data: dailyReturnModel = {\r\n    deliverCharges: 0,\r\n    debit: 0,\r\n    credit: 0,\r\n    openingBalance: 0,\r\n    riderEarning: 0,\r\n    dailyReturnAmount: 0,\r\n  };\r\n}\r\n","import { ItemEditComponent } from './admin/item-edit/item-edit.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { Tab2Page } from './tab2.page';\r\nimport { RiderSelectComponent } from './admin/rider-select/rider-select.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: Tab2Page,\r\n  },\r\n  {\r\n    path: 'riderSelect/:id',\r\n    component: RiderSelectComponent,\r\n  },\r\n  {\r\n    path: 'itemEdit/:id',\r\n    component: ItemEditComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class Tab2PageRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab2Page } from './tab2.page';\r\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\r\n\r\nimport { Tab2PageRoutingModule } from './tab2-routing.module';\r\nimport { MainPageComponent } from './admin/main-page/main-page.component';\r\nimport { ItemListComponent } from './admin/item-list/item-list.component';\r\nimport { ItemEditComponent } from './admin/item-edit/item-edit.component';\r\nimport { RiderSelectComponent } from './admin/rider-select/rider-select.component';\r\nimport { MainRiderPageComponent } from './rider/main-rider-page/main-rider-page.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ExploreContainerComponentModule,\r\n    Tab2PageRoutingModule\r\n  ],\r\n  declarations: [RiderSelectComponent,MainRiderPageComponent,Tab2Page,MainPageComponent,ItemListComponent,ItemEditComponent]\r\n})\r\nexport class Tab2PageModule {}\r\n","export default \"ion-content ion-toolbar {\\n  --background: translucent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMi9EOlxcc2lkZUNhci9zcmNcXGFwcFxcdGFiMlxcdGFiMi5wYWdlLnNjc3MiLCJzcmMvYXBwL3RhYjIvdGFiMi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvdGFiMi90YWIyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IGlvbi10b29sYmFyIHtcclxuICAgIC0tYmFja2dyb3VuZDogdHJhbnNsdWNlbnQ7XHJcbiAgfVxyXG4gIFxyXG4iLCJpb24tY29udGVudCBpb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNsdWNlbnQ7XG59Il19 */\";","import { Component } from '@angular/core';\r\nimport { appSetting } from '../app-setting';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tab2',\r\n  templateUrl: 'tab2.page.html',\r\n  styleUrls: ['tab2.page.scss']\r\n})\r\nexport class Tab2Page {\r\n\r\n  constructor(public appSetting:appSetting,public route:Router) {\r\n    //this.route.navigateByUrl('tabs/tab2');\r\n  }\r\n\r\n}\r\n"]}