{"version":3,"sources":["./src/app/login/login-from/login-from.component.html","./src/app/login/login-from/login-from.component.scss","./src/app/login/login-from/login-from.component.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["export default \"<ion-toolbar color=\\\"light\\\">\\r\\n  <ion-title>\\r\\n\\r\\n  </ion-title>\\r\\n</ion-toolbar>\\r\\n<ion-toolbar color=\\\"light\\\">\\r\\n  <ion-title>\\r\\n\\r\\n  </ion-title>\\r\\n</ion-toolbar>\\r\\n<ion-content color=\\\"light\\\" padding>\\r\\n  <ion-card>\\r\\n    <ion-card-content>\\r\\n      <ion-grid>\\r\\n        <ion-row color=\\\"primary\\\" justify-content-center>\\r\\n          <ion-col>\\r\\n\\r\\n            <div padding>\\r\\n              <ion-card>\\r\\n                <ion-item>\\r\\n                  <ion-avatar slot=\\\"start\\\">\\r\\n                    <img src='/../assets/person.svg'>\\r\\n                  </ion-avatar>\\r\\n                  <ion-label>\\r\\n                    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"this.username\\\" placeholder=\\\"Username\\\"></ion-input>\\r\\n                  </ion-label>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n            </div>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <div padding>\\r\\n              <ion-card>\\r\\n                <ion-item>\\r\\n                  <ion-avatar slot=\\\"start\\\">\\r\\n                    <img src='/../assets/key.svg'>\\r\\n                  </ion-avatar>\\r\\n                  <ion-label>\\r\\n                    <ion-input [(ngModel)]=\\\"this.password\\\" type=\\\"{{this.passwordVisibility}}\\\" placeholder=\\\"Password\\\">\\r\\n                    </ion-input>\\r\\n                  </ion-label>\\r\\n                  <ion-button (click)=\\\"passVisible()\\\" color=\\\"light\\\">\\r\\n                    <ion-icon *ngIf=\\\"this.passwordVisibility === 'password'\\\" name=\\\"eye-outline\\\"></ion-icon>\\r\\n                    <ion-icon *ngIf=\\\"this.passwordVisibility === 'text'\\\" name=\\\"eye-off-outline\\\"></ion-icon>\\r\\n                  </ion-button>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n            </div>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button (click)=\\\"onClick()\\\" expand=\\\"block\\\" color=\\\"primary\\\">\\r\\n              Cancel\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button (click)=\\\"onClick()\\\" expand=\\\"block\\\" color=\\\"primary\\\">\\r\\n              Login\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n\\r\\n\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\\r\\n<ion-toolbar color=\\\"light\\\">\\r\\n\\r\\n  <ion-text color=\\\"\\\" class=\\\"ion-align-items-center\\\">\\r\\n    <div style=\\\"text-align: center;\\\">\\r\\n      <p>All Rights Reserved. â„¢ by <a target=\\\"_blank\\\" color=\\\"light\\\" href=\\\"https://sakbran.github.io\\\">Sak Bran</a></p>\\r\\n    </div>\\r\\n  </ion-text>\\r\\n\\r\\n\\r\\n</ion-toolbar>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLWZyb20vbG9naW4tZnJvbS5jb21wb25lbnQuc2NzcyJ9 */\";","import { userModel } from './../../Models/userModel';\r\nimport { appSetting } from \"src/app/app-setting\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { UserModelService } from \"src/app/Services/userModel/user-model.service\";\r\nimport { UserTypeService } from \"src/app/Services/userType/user-type.service\";\r\n\r\n@Component({\r\n  selector: \"app-login-from\",\r\n  templateUrl: \"./login-from.component.html\",\r\n  styleUrls: [\"./login-from.component.scss\"],\r\n})\r\nexport class LoginFromComponent implements OnInit {\r\n  constructor(\r\n\r\n    private router: Router,\r\n    private userService: UserModelService,\r\n    private appSetting: appSetting,\r\n    private userTypeService: UserTypeService\r\n  ) {\r\n   \r\n  }\r\n\r\n  ngOnInit() {}\r\n  username: string = \"\";\r\n  password: string = \"\";\r\n  passwordVisibility = \"password\";\r\n  passVisible() {\r\n    if (this.passwordVisibility === \"password\") {\r\n      this.passwordVisibility = \"text\";\r\n    } else {\r\n      this.passwordVisibility = \"password\";\r\n    }\r\n  }\r\n\r\n  userData: userModel = {\r\n    id: 0,\r\n    username: \"\",\r\n    password: \"\",\r\n    usertype: 0,\r\n    phone: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n  };\r\n  locationUpdate(){\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        this.userData.latitude = position.coords.latitude.toString();\r\n        this.userData.longitude = position.coords.longitude.toString();\r\n        this.userService.putLocation(this.userData);\r\n      });\r\n    }\r\n  }\r\n  onClick() {\r\n    this.appSetting.showLoading();\r\n    console.log(this.username);\r\n    console.log(this.password);\r\n\r\n    this.userService.getLogin(this.username, this.password).subscribe(\r\n      (x) => {\r\n        console.log(x);\r\n        this.appSetting.sessionUserID = x.id;\r\n        this.userData = x;\r\n      },\r\n      (err) => this.appSetting.showError(err),\r\n      () => {\r\n        if (this.appSetting.sessionUserID === 0) {\r\n          this.appSetting.loginFail();\r\n        } else {\r\n          this.userTypeService.getSingle(this.userData.usertype).subscribe(\r\n            (y) => {\r\n              this.appSetting.loginType = y.usertypeName.toLocaleLowerCase();\r\n              \r\n            },\r\n            (err) => this.appSetting.showError(err),\r\n            () => {\r\n              if (this.appSetting.loginType === \"resturant\") {\r\n                this.appSetting.resturantID = this.appSetting.sessionUserID;\r\n              }\r\n              console.log(\"Type\" + this.appSetting.loginType);\r\n              if (this.appSetting.loginType === \"rider\") {\r\n                setInterval(() => {\r\n                  //this.locationUpdate();\r\n               this.locationUpdate();\r\n                  console.log(\"Interval running\");\r\n                 \r\n                }, 30000);\r\n              }\r\n              this.appSetting.loginSuccess();\r\n              this.router.navigateByUrl(\"/tabs\");\r\n\r\n            }\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginFromComponent } from './login-from/login-from.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthGuardService } from '../auth/authGuard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',component:LoginFromComponent\r\n  }\r\n  ,\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('../tabs/tabs.module').then(m => m.TabsPageModule),\r\n    canActivate: [AuthGuardService] \r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [FormsModule,RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginFromComponent } from './login-from/login-from.component';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginFromComponent],\r\n  imports: [IonicModule,\r\n    CommonModule,FormsModule,\r\n    LoginRoutingModule\r\n  ],\r\n \r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":"webpack:///"}