{"version":3,"sources":["webpack:///src/app/Models/foodModel.ts","webpack:///src/app/Models/mainModel.ts","webpack:///src/app/Services/category/category.service.ts","webpack:///src/app/Services/food/food.service.ts","webpack:///src/app/Services/location/location.service.ts","webpack:///src/app/Services/mainModel/main-model.service.ts","webpack:///src/app/Services/resturantModel/resturant-model.service.ts","webpack:///src/app/Services/upload/upload.service.ts","webpack:///src/app/Services/userModel/user-model.service.ts"],"names":["foodModel","mainModel","CategoryService","http","appSetting","url","apiAddress","httpOptions","headers","get","id","searchUrl","data","post","subscribe","res","showSuccess","err","console","log","put","showError","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","DONE","open","send","providedIn","FoodService","uploadService","imageData","temp","Object","assign","refreshArray","result","showLoading","i","foodDataList","forEach","x","status","undefined","itemName","price","itemNameTemp","priceTemp","ex","JSON","stringify","LocationService","MainModelService","ResturantModelService","UploadService","filename","Uploadurl","formData","FormData","blob","dataURItoBlob","append","dataURI","byteString","atob","split","mimeString","ab","ArrayBuffer","length","ia","Uint8Array","charCodeAt","Blob","type","UserModelService","username","password"],"mappings":"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","file":"default~home-home-module~tab3-tab3-module-es5.js","sourcesContent":["export class foodModel {\r\n  id: number;\r\n  itemName: string;\r\n  itemNameTemp: string;\r\n  mainitem_id:number;\r\n  resturant_id: number;\r\n  price: number;\r\n  priceTemp: number;\r\n  status: string;\r\n  imageURI:string;\r\n  categoryType_ID:number;\r\n  Descriptions:string;\r\n}\r\n","export class mainModel{\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    resturant: string;\r\n    resturant_id: number;\r\n    category_id: number;\r\n    mainitem_id:number;\r\n    imageURI: string;\r\n    status: string;\r\n  }","import { appSetting } from \"./../../app-setting\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport Swal from \"sweetalert2\";\nimport { CategoryModel } from \"src/app/Models/CategoryModel\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  private url = `${this.appSetting.apiAddress}/api/apiCategoryModels`;\n  private httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n    }),\n  };\n  constructor(private http: HttpClient, private appSetting: appSetting) {}\n\n  get(): Observable<CategoryModel[]> {\n    return this.http.get<CategoryModel[]>(this.url);\n  }\n  getSingle(id: number): Observable<CategoryModel> {\n    const searchUrl = `${this.url}/${id}`;\n    return this.http.get<CategoryModel>(searchUrl);\n  }\n  post(data: CategoryModel): void {\n    this.http.post(this.url, data, this.httpOptions).subscribe(\n      (res) => {\n      \n        this.appSetting.showSuccess();\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  put(data: CategoryModel): void {\n    const searchUrl = `${this.url}/${data.id}`;\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\n      (res) => {\n       \n        this.appSetting.showSuccess();\n      },\n      (err) => {\n        console.log(err);\n        this.appSetting.showError(err);\n      }\n    );\n  }\n\n  delete(id: number): void {\n    const data = null;\n    const xhr = new XMLHttpRequest();\n    xhr.withCredentials = false;\n\n    xhr.addEventListener(\"readystatechange\", function () {\n      if (this.readyState === this.DONE) {\n      \n      }\n    });\n\n    xhr.open(\"DELETE\", this.url + \"/\" + id);\n\n    xhr.send(data);\n  }\n}\n","import { appSetting } from \"./../../app-setting\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport Swal from \"sweetalert2\";\r\nimport { foodModel } from \"src/app/Models/foodModel\";\r\nimport { UploadService } from \"../upload/upload.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FoodService {\r\n  private url = `${this.appSetting.apiAddress}/api/foodModels`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n  constructor(\r\n    private http: HttpClient,\r\n    private uploadService: UploadService,\r\n    private appSetting: appSetting\r\n  ) {}\r\n\r\n  get(id: number): Observable<foodModel[]> {\r\n    return this.http.get<foodModel[]>(\r\n      this.url + `/resturant?ResturantID=${id}`\r\n    );\r\n  }\r\n\r\n  getPending(): Observable<foodModel[]> {\r\n    return this.http.get<foodModel[]>(this.url + `/pending`);\r\n  }\r\n\r\n  getActive(): Observable<foodModel[]> {\r\n    return this.http.get<foodModel[]>(this.url + `/active`);\r\n  }\r\n\r\n  getSingle(id: number): Observable<foodModel> {\r\n    const searchUrl = `${this.url}/${id}`;\r\n    return this.http.get<foodModel>(searchUrl);\r\n  }\r\n  post(data: foodModel, imageData): void {\r\n    let temp: foodModel = new foodModel();\r\n    this.http.post(this.url, data, this.httpOptions).subscribe(\r\n      (res) => {\r\n        temp = Object.assign(res);\r\n      \r\n        this.uploadService.post(imageData, \"Image\" + temp.id);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  put(data: foodModel): void {\r\n    let temp: foodModel = new foodModel();\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      () => {\r\n        this.refreshArray(data.id, data);\r\n        this.appSetting.showSuccess();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  putConfirm(id, result): void {\r\n    this.appSetting.showLoading();\r\n    const searchUrl = `${this.url}/confirm?keyID=${id}&result=${result}`;\r\n    let data: foodModel = new foodModel();\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      (res) => {\r\n        this.refreshArray(id);\r\n        this.appSetting.showSuccess();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number): void {\r\n    const data = null;\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n\r\n    xhr.addEventListener(\"readystatechange\", function () {\r\n      if (this.readyState === this.DONE) {\r\n        \r\n      }\r\n    });\r\n\r\n    xhr.open(\"DELETE\", this.url + \"/\" + id);\r\n\r\n    xhr.send(data);\r\n    this.refreshArray(id);\r\n  }\r\n\r\n  private refreshArray(id: number, data?: foodModel) {\r\n    let i = -1;\r\n    this.appSetting.foodDataList.forEach((x) => {\r\n      i++;\r\n      if (x.id === id) {\r\n        x.status = \"delete\";\r\n        console.log(data);\r\n        try {\r\n          if (data !== null || data !== undefined) {\r\n            x.itemName = data.itemName;\r\n            x.price = data.price;\r\n            x.itemNameTemp = data.itemNameTemp;\r\n            x.priceTemp = data.priceTemp;\r\n          }\r\n        } catch (ex) {\r\n          console.log(JSON.stringify(ex));\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { appSetting } from \"./../../app-setting\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport Swal from \"sweetalert2\";\r\nimport { locationModel } from \"src/app/Models/locationModel\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class LocationService {\r\n  private url = `${this.appSetting.apiAddress}/api/locationModels`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n  constructor(private http: HttpClient, private appSetting: appSetting) {}\r\n\r\n  get(): Observable<locationModel[]> {\r\n    return this.http.get<locationModel[]>(this.url);\r\n  }\r\n  getSingle(id: number): Observable<locationModel> {\r\n    const searchUrl = `${this.url}/${id}`;\r\n    return this.http.get<locationModel>(searchUrl);\r\n  }\r\n  post(data: locationModel): void {\r\n    this.http.post(this.url, data, this.httpOptions).subscribe(\r\n      (res) => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  put(data: locationModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      (res) => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number): void {\r\n    const data = null;\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n\r\n    xhr.addEventListener(\"readystatechange\", function () {\r\n      if (this.readyState === this.DONE) {\r\n        \r\n      }\r\n    });\r\n\r\n    xhr.open(\"DELETE\", this.url + \"/\" + id);\r\n\r\n    xhr.send(data);\r\n  }\r\n}\r\n","import { appSetting } from \"./../../app-setting\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport Swal from \"sweetalert2\";\nimport { mainModel } from \"src/app/Models/mainModel\";\nimport { UploadService } from \"../upload/upload.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MainModelService {\n  private url = `${this.appSetting.apiAddress}/api/mainModels`;\n  private httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n    }),\n  };\n  constructor(\n    private uploadService: UploadService,\n    private http: HttpClient,\n    private appSetting: appSetting\n  ) {}\n\n  get(): Observable<mainModel[]> {\n    return this.http.get<mainModel[]>(`${this.url}`);\n  }\n  getSingle(id: number): Observable<mainModel> {\n    const searchUrl = `${this.url}/${id}`;\n    return this.http.get<mainModel>(searchUrl);\n  }\n  post(data: mainModel, imageData): void {\n    let temp: mainModel = new mainModel();\n    this.http.post(this.url, data, this.httpOptions).subscribe(\n      (res) => {\n        temp = Object.assign(res);\n\n        this.uploadService.post(imageData, \"MainImage\" + temp.id);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  put(data: mainModel): void {\n    const searchUrl = `${this.url}/${data.id}`;\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\n      (res) => {\n        \n        this.appSetting.showSuccess();\n      },\n      (err) => {\n        console.log(err);\n        this.appSetting.showError(err);\n      }\n    );\n  }\n\n  delete(id: number): void {\n    const data = null;\n    const xhr = new XMLHttpRequest();\n    xhr.withCredentials = false;\n\n    xhr.addEventListener(\"readystatechange\", function () {\n      if (this.readyState === this.DONE) {\n        \n      }\n    });\n\n    xhr.open(\"DELETE\", this.url + \"/\" + id);\n\n    xhr.send(data);\n  }\n}\n","import { resturantModel } from './../../Models/resturantModel';\r\nimport { appSetting } from './../../app-setting';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResturantModelService {\r\n  private url = `${this.appSetting.apiAddress}/api/resturantModels`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient,private appSetting:appSetting) { }\r\n\r\n  get(): Observable<resturantModel[]> {\r\n    return this.http.get<resturantModel[]>(this.url);\r\n  }\r\n  getSingle(id: number): Observable<resturantModel> {\r\n    const searchUrl = `${this.url}/${id}`;\r\n    return this.http.get<resturantModel>(searchUrl);\r\n  }\r\n  post(data: resturantModel): void {\r\n    this.http.post(this.url, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  put(data: resturantModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number): void {\r\n    const data = null;\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n\r\n    xhr.addEventListener('readystatechange', function() {\r\n      if (this.readyState === this.DONE) {\r\n        \r\n      }\r\n    });\r\n\r\n    xhr.open('DELETE', this.url + '/' + id);\r\n\r\n    xhr.send(data);\r\n  }\r\n}\r\n\r\n","import { appSetting } from \"./../../app-setting\";\nimport { Injectable } from \"@angular/core\";\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UploadService {\n  private url = `${this.appSetting.apiAddress}/api/upload`;\n  private httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"multipart/form-data\",\n    }),\n  };\n  constructor(private http: HttpClient, private appSetting: appSetting) {}\n\n  post(data, filename): void {\n    let Uploadurl = this.url + `?filename=${filename}`;\n\n\n\n    const formData: FormData = new FormData();\n   \n    const blob = this.dataURItoBlob(data);\n    formData.append('file', blob, filename+\".jpg\");\n    if (formData !== null) {\n      this.http.post<any>(Uploadurl, formData).subscribe(\n        (x) => console.log(x),\n        (err) => {\n          this.appSetting.showError(err);\n        },\n        () => {\n          this.appSetting.showSuccess();\n        }\n      );\n    }\n  }\n  dataURItoBlob(dataURI) {\n    // convert base64 to raw binary data held in a string\n    // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n    var byteString = atob(dataURI.split(',')[1]);\n  \n    // separate out the mime component\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n  \n    // write the bytes of the string to an ArrayBuffer\n    var ab = new ArrayBuffer(byteString.length);\n  \n    // create a view into the buffer\n    var ia = new Uint8Array(ab);\n  \n    // set the bytes of the buffer to the correct values\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n  \n    // write the ArrayBuffer to a blob, and you're done\n    var blob = new Blob([ab], {type: mimeString});\n    return blob;\n  \n  }\n\n  b64toBlob(dataURI): Blob {\n    var byteString = atob(dataURI.split(\",\")[1]);\n    var ab = new ArrayBuffer(byteString.length);\n    var ia = new Uint8Array(ab);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new Blob([ab], { type: \"image/jpeg\" });\n  }\n}\n","import { userModel } from './../../Models/userModel';\r\nimport { appSetting } from './../../app-setting';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserModelService {\r\n  private url = `${this.appSetting.apiAddress}/api/userModels`;\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n  constructor(private http: HttpClient,private appSetting:appSetting) { }\r\n\r\n  get(): Observable<userModel[]> {\r\n    return this.http.get<userModel[]>(this.url);\r\n  }\r\n\r\n  getLogin(username:string,password:string): Observable<userModel>{\r\n    console.log(this.url+`/login?user=${username}&password=${password}`);\r\n    return this.http.get<userModel>(this.url+`/login?user=${username}&password=${password}`);\r\n  }\r\n  getAvailableRider(): Observable<userModel[]> {\r\n    return this.http.get<userModel[]>(this.url+`/availableRider`);\r\n  }\r\n  \r\n  getDeliveringRider(): Observable<userModel[]> {\r\n    return this.http.get<userModel[]>(this.url+`/deliveringRider`);\r\n  }\r\n  \r\n  getSingle(id: number): Observable<userModel> {\r\n    const searchUrl = `${this.url}/${id}`;\r\n    return this.http.get<userModel>(searchUrl);\r\n  }\r\n  post(data: userModel): void {\r\n    this.http.post(this.url, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  put(data: userModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        this.appSetting.showSuccess();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        this.appSetting.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  putLocation(data: userModel): void {\r\n    const searchUrl = `${this.url}/${data.id}`;\r\n    this.http.put(searchUrl, data, this.httpOptions).subscribe(\r\n      res => {\r\n        \r\n        \r\n      },\r\n      err => {\r\n        console.log(err);\r\n       \r\n      }\r\n    );\r\n  }\r\n\r\n  delete(id: number): void {\r\n    const data = null;\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = false;\r\n\r\n    xhr.addEventListener('readystatechange', function() {\r\n      if (this.readyState === this.DONE) {\r\n        \r\n      }\r\n    });\r\n\r\n    xhr.open('DELETE', this.url + '/' + id);\r\n\r\n    xhr.send(data);\r\n  }\r\n}\r\n"]}